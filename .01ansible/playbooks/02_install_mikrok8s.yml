---
- name: Install MicroK8s on all nodes
  hosts: all
  become: yes
  tasks:
    - name: Gather the package facts
      ansible.builtin.package_facts:
        manager: auto

    - name: Load necessary kernel modules
      ansible.builtin.modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - br_netfilter
        - overlay
      # Removed the notify for rebooting the system as it's unnecessary

    - name: Update apt package index
      ansible.builtin.apt:
        update_cache: yes
      # Idempotency maintained by apt module

    - name: Install snapd
      ansible.builtin.apt:
        name: snapd
        state: present
      # Using ansible_facts.packages ensures idempotency by checking if snapd is already installed.

    - name: Ensure snapâ€™s core is up-to-date
      ansible.builtin.command: snap install core --classic
      ignore_errors: yes
      # Consider handling errors more gracefully or ensuring idempotency by checking snap core status first.

    - name: Check if MicroK8s is installed
      ansible.builtin.command: snap list microk8s
      register: microk8s_installed
      failed_when: false
      changed_when: false

    - name: Install MicroK8s
      ansible.builtin.command: snap install microk8s --classic
      when: microk8s_installed.rc != 0

    - name: Ensure current user is in the microk8s group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: microk8s
        append: yes

    - name: Wait for MicroK8s to be ready
      ansible.builtin.shell: microk8s status --wait-ready
      args:
        executable: /bin/bash
      # Ensures MicroK8s is fully operational before proceeding.

- name: Initialize MicroK8s cluster
  hosts: controlplanes
  become: yes
  tasks:
    - name: Enable common services
      ansible.builtin.shell: microk8s enable dns dashboard storage
      # Shell used for commands not directly supported by Ansible modules

    - name: Generate the join command (Manual Construction)
      ansible.builtin.command: microk8s add-node --token-ttl 600
      register: add_node_output
      changed_when: true
      # Assuming change is made when command runs, ensuring idempotency might require additional logic.

    - name: Extract token and ip-port
      ansible.builtin.set_fact:
        join_command_details: "{{ add_node_output.stdout_lines | select('search', 'microk8s join') | first }}"

    - debug:
        var: join_command_details
      # Good for troubleshooting but consider if it's needed in production code.

- name: Join MicroK8s Workers
  hosts: workers
  become: yes
  tasks:
    - name: Construct and execute join command on worker nodes
      ansible.builtin.shell: "{{ hostvars[groups['controlplanes'][0]].join_command_details }}"
      when: inventory_hostname not in groups['controlplanes']
      # Executes join command only on workers, excluding control planes.
