---
- name: Prepare and Configure Nodes for MicroK8s with Mayastor
  hosts: all
  become: yes
  gather_facts: yes

  tasks:
    - name: Update apt package index
      apt:
        update_cache: yes

    - name: Install necessary packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - snapd
          - gnupg2
          - software-properties-common
          - util-linux
        state: present

    - name: Ensure snapâ€™s core is up-to-date
      ansible.builtin.command:
        cmd: snap install core
      ignore_errors: yes

    - name: Install MicroK8s
      ansible.builtin.command:
        cmd: snap install microk8s --classic --channel=1.27/stable
      ignore_errors: yes

    - name: Add the current user to the microk8s group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: microk8s
        append: yes

    - name: Enable and configure HugePages
      block:
        - name: Enable HugePages
          ansible.builtin.sysctl:
            name: vm.nr_hugepages
            value: '1024'
            state: present
            reload: yes
        - name: Persist HugePages configuration
          ansible.builtin.lineinfile:
            path: /etc/sysctl.conf
            line: 'vm.nr_hugepages=1024'
            create: yes

    - name: Install and load required kernel modules
      block:
        - name: Install nvme_tcp module support
          ansible.builtin.apt:
            name: linux-modules-extra-{{ ansible_kernel }}
            state: present
        - name: Load nvme_tcp module
          ansible.builtin.modprobe:
            name: nvme_tcp
            state: present
        - name: Ensure nvme_tcp module loads on boot
          ansible.builtin.lineinfile:
            path: /etc/modules-load.d/microk8s-mayastor.conf
            line: 'nvme-tcp'
            create: yes

    - name: Restart MicroK8s to apply changes
      ansible.builtin.shell: microk8s stop && microk8s start
      ignore_errors: yes

    - name: Enable DNS and Helm addons
      ansible.builtin.shell: microk8s enable dns helm3

    - name: Enable Mayastor addon
      ansible.builtin.shell: microk8s enable core/mayastor --default-pool-size 20G

- name: Dynamically Create Mayastor Pools on Nodes with Suitable SSDs
  hosts: all
  become: yes
  gather_facts: no

  tasks:
    - name: Get disk details using lsblk
      ansible.builtin.shell: lsblk -b -o NAME,SIZE,MOUNTPOINT -J
      register: lsblk_output
      changed_when: false

    - name: Set fact for disks larger than 900GB without a mountpoint
      set_fact:
        large_disks: "{{ lsblk_output.stdout | from_json | json_query('blockdevices[?size>`900*1024*1024*1024` && mountpoint==``].name') }}"

    - name: Debug large disks
      ansible.builtin.debug:
        msg: "Large disks found: {{ large_disks }}"

    - name: Create Mayastor pools on identified disks
      ansible.builtin.shell: "microk8s mayastor-pools add --node {{ ansible_hostname }} --device /dev/{{ item }}"
      loop: "{{ large_disks }}"
      when: large_disks is defined and large_disks | length > 0
      ignore_errors: true
