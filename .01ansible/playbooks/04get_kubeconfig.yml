---
- name: Ensure kubectl is installed on the workstation
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Check if kubectl is installed
      command: kubectl version --client --output=json
      register: kubectl_installed
      failed_when: false
      changed_when: false

    - name: Set Kubernetes client version as a fact
      set_fact:
        kubernetes_client_version: "{{ (kubectl_installed.stdout | from_json)['clientVersion']['gitVersion'] }}"
      when: kubectl_installed.rc == 0

    - name: Download kubectl
      when: kubectl_installed.rc != 0 or kubectl_installed.stdout | from_json | json_query('clientVersion.gitVersion') != kubernetes_client_version
      get_url:
        url: "https://storage.googleapis.com/kubernetes-release/release/{{ kubernetes_client_version }}/bin/linux/amd64/kubectl"
        dest: "/usr/local/bin/kubectl"
        mode: '0755'

    - name: Verify kubectl installation
      command: kubectl version --client

- name: Setup kubeconfig on local workstation
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Create .kube directory on workstation
      file:
        path: "/home/dario/.kube"
        state: directory
        mode: '0755'

    - name: Fetch kubeconfig from MicroK8s control plane
      command: ssh dario@192.168.1.10 microk8s config
      register: kubeconfig_content

    - name: Save kubeconfig to local workstation
      copy:
        content: "{{ kubeconfig_content.stdout }}"
        dest: "/home/dario/.kube/config"
        mode: '0600'
