{
  "version": 4,
  "terraform_version": "1.4.6",
  "serial": 41,
  "lineage": "1692af03-4ae5-c312-6280-91100209235d",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "talos_client_configuration",
      "name": "cube",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "client_configuration": {
              "ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBdWVzeG9nc25tTG9MdjBCdEF6WHptREFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qTXdOVEU1TVRNek5UQTVXaGNOTXpNd05URTJNVE16TlRBNVdqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQU9PTGQxdG9XSnUyUFlyQVZpdTRaaHZYOHhock8xeXVWVlk2CnpQamh4SkIwbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRlBTbi9HdGR2b2ErQkgyVgp2b252dnVUUEtscUZNQVVHQXl0bGNBTkJBQmFzTGlkRC8rREM1dU0weFNWN3RRazR3d05vUXJRdEVFMGE5UDlKCkpyNXY3NDRFbVltcllUZVc4K05wdmFZc0VtTTJ1V3hMYlJnbU1aYjdnQWd5THdNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEEvbDNlNnNuWFAyNmw0ajVpS3plaVVNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNVGt4TXpNMU1EbGFGdzB6TXpBMU1UWXhNek0xTURsYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQTJMNUVQUEh6WUV4T1dzcDZwenpyOXBxdTdybTdUTFpvCmt3K0dCSGtNQmVpalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCVDBwL3hyWGI2R3ZnUjlsYjZKNzc3a3p5cGFoVEFGQmdNclpYQURRUUR6NXUwawptQ3RjTEx5STFoa0FaSHgyR1k5RTNIdThxTFRub2JqZ1BNU1c5Q2EzT2E3TnF1YS9zUWNMVC83YTR1emNaMjJyCnFIZWJ6bWVjbU9Vemo5MEYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
              "client_key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJRy91ZlZNZnRXci9XWFZrT1NvMnhtMDJCMnZ2b2F4ZFVOWS9MaTFLemJEcwotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "cluster_name": "talos-cube",
            "endpoints": null,
            "id": "talos-cube",
            "nodes": [
              "192.168.1.11"
            ],
            "talos_config": "context: talos-cube\ncontexts:\n    talos-cube:\n        endpoints: []\n        nodes:\n            - 192.168.1.11\n        ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBdWVzeG9nc25tTG9MdjBCdEF6WHptREFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qTXdOVEU1TVRNek5UQTVXaGNOTXpNd05URTJNVE16TlRBNVdqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQU9PTGQxdG9XSnUyUFlyQVZpdTRaaHZYOHhock8xeXVWVlk2CnpQamh4SkIwbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRlBTbi9HdGR2b2ErQkgyVgp2b252dnVUUEtscUZNQVVHQXl0bGNBTkJBQmFzTGlkRC8rREM1dU0weFNWN3RRazR3d05vUXJRdEVFMGE5UDlKCkpyNXY3NDRFbVltcllUZVc4K05wdmFZc0VtTTJ1V3hMYlJnbU1aYjdnQWd5THdNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEEvbDNlNnNuWFAyNmw0ajVpS3plaVVNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNVGt4TXpNMU1EbGFGdzB6TXpBMU1UWXhNek0xTURsYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQTJMNUVQUEh6WUV4T1dzcDZwenpyOXBxdTdybTdUTFpvCmt3K0dCSGtNQmVpalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCVDBwL3hyWGI2R3ZnUjlsYjZKNzc3a3p5cGFoVEFGQmdNclpYQURRUUR6NXUwawptQ3RjTEx5STFoa0FaSHgyR1k5RTNIdThxTFRub2JqZ1BNU1c5Q2EzT2E3TnF1YS9zUWNMVC83YTR1emNaMjJyCnFIZWJ6bWVjbU9Vemo5MEYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJRy91ZlZNZnRXci9XWFZrT1NvMnhtMDJCMnZ2b2F4ZFVOWS9MaTFLemJEcwotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K\n"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "client_configuration"
              },
              {
                "type": "get_attr",
                "value": "client_key"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "talos_machine_configuration",
      "name": "cube",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cluster_endpoint": "https://192.168.1.11:6443",
            "cluster_name": "talos-cube",
            "config_patches": null,
            "docs": true,
            "examples": true,
            "id": "talos-cube",
            "kubernetes_version": "1.27.1",
            "machine_configuration": "version: v1alpha1 # Indicates the schema used to decode the contents.\ndebug: false # Enable verbose logging to the console.\npersist: true # Indicates whether to pull the machine config upon every boot.\n# Provides machine specific configuration options.\nmachine:\n    type: controlplane # Defines the role of the machine within the cluster.\n    token: x8c0sb.hoxte580hjlzq26y # The `token` is used by a machine to join the PKI of the cluster.\n    # The root certificate authority of the PKI.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBdWVzeG9nc25tTG9MdjBCdEF6WHptREFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qTXdOVEU1TVRNek5UQTVXaGNOTXpNd05URTJNVE16TlRBNVdqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQU9PTGQxdG9XSnUyUFlyQVZpdTRaaHZYOHhock8xeXVWVlk2CnpQamh4SkIwbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRlBTbi9HdGR2b2ErQkgyVgp2b252dnVUUEtscUZNQVVHQXl0bGNBTkJBQmFzTGlkRC8rREM1dU0weFNWN3RRazR3d05vUXJRdEVFMGE5UDlKCkpyNXY3NDRFbVltcllUZVc4K05wdmFZc0VtTTJ1V3hMYlJnbU1aYjdnQWd5THdNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJR3l2OG8rNVNrcm0rcWR6eklKeEJ2dnpJWW5kSVprTFc2ZkgxVjBrNHliTwotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K\n    # Extra certificate subject alternative names for the machine's certificate.\n    certSANs: []\n    #   # Uncomment this to enable SANs.\n    #   - 10.0.0.10\n    #   - 172.16.0.10\n    #   - 192.168.0.10\n\n    # Used to provide additional options to the kubelet.\n    kubelet:\n        image: ghcr.io/siderolabs/kubelet:v1.27.1 # The `image` field is an optional reference to an alternative kubelet image.\n        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.\n        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.\n        \n        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.\n        # clusterDNS:\n        #     - 10.96.0.10\n        #     - 169.254.2.53\n\n        # # The `extraArgs` field is used to provide additional flags to the kubelet.\n        # extraArgs:\n        #     key: value\n\n        # # The `extraMounts` field is used to add additional mounts to the kubelet container.\n        # extraMounts:\n        #     - destination: /var/lib/example\n        #       type: bind\n        #       source: /var/lib/example\n        #       options:\n        #         - bind\n        #         - rshared\n        #         - rw\n\n        # # The `extraConfig` field is used to provide kubelet configuration overrides.\n        # extraConfig:\n        #     serverTLSBootstrap: true\n\n        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.\n        # nodeIP:\n        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.\n        #     validSubnets:\n        #         - 10.0.0.0/8\n        #         - '!10.0.0.3/32'\n        #         - fdc7::/16\n    # Provides machine specific network configuration options.\n    network: {}\n    # # `interfaces` is used to define the network interface configuration.\n    # interfaces:\n    #     - interface: eth0 # The interface name.\n    #       # Assigns static IP addresses to the interface.\n    #       addresses:\n    #         - 192.168.2.0/24\n    #       # A list of routes associated with the interface.\n    #       routes:\n    #         - network: 0.0.0.0/0 # The route's network (destination).\n    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).\n    #           metric: 1024 # The optional metric for the route.\n    #       mtu: 1500 # The interface's MTU.\n    #       \n    #       # # Picks a network device using the selector.\n\n    #       # # select a device with bus prefix 00:*.\n    #       # deviceSelector:\n    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n    #       # deviceSelector:\n    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #     driver: virtio # Kernel driver, supports matching by wildcard.\n    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n    #       # deviceSelector:\n    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #       driver: virtio # Kernel driver, supports matching by wildcard.\n\n    #       # # Bond specific options.\n    #       # bond:\n    #       #     # The interfaces that make up the bond.\n    #       #     interfaces:\n    #       #         - eth0\n    #       #         - eth1\n    #       #     # Picks a network device using the selector.\n    #       #     deviceSelectors:\n    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #           driver: virtio # Kernel driver, supports matching by wildcard.\n    #       #     mode: 802.3ad # A bond option.\n    #       #     lacpRate: fast # A bond option.\n\n    #       # # Bridge specific options.\n    #       # bridge:\n    #       #     # The interfaces that make up the bridge.\n    #       #     interfaces:\n    #       #         - eth0\n    #       #         - eth1\n    #       #     # A bridge option.\n    #       #     stp:\n    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.\n\n    #       # # Indicates if DHCP should be used to configure the interface.\n    #       # dhcp: true\n\n    #       # # DHCP specific options.\n    #       # dhcpOptions:\n    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.\n\n    #       # # Wireguard specific configuration.\n\n    #       # # wireguard server example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     listenPort: 51111 # Specifies a device's listening port.\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n    #       # # wireguard peer example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.\n    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n\n    #       # # Virtual (shared) IP address configuration.\n\n    #       # # layer2 vip example\n    #       # vip:\n    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.\n\n    # # Used to statically set the nameservers for the machine.\n    # nameservers:\n    #     - 8.8.8.8\n    #     - 1.1.1.1\n\n    # # Allows for extra entries to be added to the `/etc/hosts` file\n    # extraHostEntries:\n    #     - ip: 192.168.1.100 # The IP of the host.\n    #       # The host alias.\n    #       aliases:\n    #         - example\n    #         - example.domain.tld\n\n    # # Configures KubeSpan feature.\n    # kubespan:\n    #     enabled: true # Enable the KubeSpan feature.\n\n    # Used to provide instructions for installations.\n    install:\n        disk: /dev/sda # The disk used for installations.\n        image: ghcr.io/siderolabs/installer:v1.4.0 # Allows for supplying the image used to perform the installation.\n        bootloader: true # Indicates if a bootloader should be installed.\n        wipe: false # Indicates if the installation disk should be wiped at installation time.\n        \n        # # Look up disk using disk attributes like model, size, serial and others.\n        # diskSelector:\n        #     size: 4GB # Disk size.\n        #     model: WDC* # Disk model `/sys/block/\u003cdev\u003e/device/model`.\n        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.\n\n        # # Allows for supplying extra kernel args via the bootloader.\n        # extraKernelArgs:\n        #     - talos.platform=metal\n        #     - reboot=k\n\n        # # Allows for supplying additional system extension images to install on top of base Talos image.\n        # extensions:\n        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.\n    # Used to configure the machine's container image registry mirrors.\n    registries: {}\n    # # Specifies mirror configuration for each registry host namespace.\n    # mirrors:\n    #     ghcr.io:\n    #         # List of endpoints (URLs) for registry mirrors to use.\n    #         endpoints:\n    #             - https://registry.insecure\n    #             - https://ghcr.io/v2/\n\n    # # Specifies TLS \u0026 auth configuration for HTTPS image registries.\n    # config:\n    #     registry.insecure:\n    #         # The TLS configuration for the registry.\n    #         tls:\n    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).\n    #             \n    #             # # Enable mutual TLS authentication with the registry.\n    #             # clientIdentity:\n    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #         \n    #         # # The auth configuration for this registry.\n    #         # auth:\n    #         #     username: username # Optional registry authentication.\n    #         #     password: password # Optional registry authentication.\n\n    # Features describe individual Talos features that can be switched on or off.\n    features:\n        rbac: true # Enable role-based access control (RBAC).\n        stableHostname: true # Enable stable default hostname.\n        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.\n        \n        # # Configure Talos API access from Kubernetes pods.\n        # kubernetesTalosAPIAccess:\n        #     enabled: true # Enable Talos API access from Kubernetes pods.\n        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.\n        #     allowedRoles:\n        #         - os:reader\n        #     # The list of Kubernetes namespaces Talos API access is available from.\n        #     allowedKubernetesNamespaces:\n        #         - kube-system\n    \n    # # Provides machine specific control plane configuration options.\n\n    # # ControlPlane definition example.\n    # controlPlane:\n    #     # Controller manager machine specific configuration options.\n    #     controllerManager:\n    #         disabled: false # Disable kube-controller-manager on the node.\n    #     # Scheduler machine specific configuration options.\n    #     scheduler:\n    #         disabled: true # Disable kube-scheduler on the node.\n\n    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.\n\n    # # nginx static pod.\n    # pods:\n    #     - apiVersion: v1\n    #       kind: pod\n    #       metadata:\n    #         name: nginx\n    #       spec:\n    #         containers:\n    #             - image: nginx\n    #               name: nginx\n\n    # # Used to partition, format and mount additional disks.\n\n    # # MachineDisks list example.\n    # disks:\n    #     - device: /dev/sdb # The name of the disk to use.\n    #       # A list of partitions to create on the disk.\n    #       partitions:\n    #         - mountpoint: /var/mnt/extra # Where to mount the partition.\n    #           \n    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.\n\n    #           # # Human readable representation.\n    #           # size: 100 MB\n    #           # # Precise value in bytes.\n    #           # size: 1073741824\n\n    # # Allows the addition of user specified files.\n\n    # # MachineFiles usage example.\n    # files:\n    #     - content: '...' # The contents of the file.\n    #       permissions: 0o666 # The file's permissions in octal.\n    #       path: /tmp/file.txt # The path of the file.\n    #       op: append # The operation to use\n\n    # # The `env` field allows for the addition of environment variables.\n\n    # # Environment variables definition examples.\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: info\n    #     GRPC_GO_LOG_VERBOSITY_LEVEL: \"99\"\n    #     https_proxy: http://SERVER:PORT/\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: error\n    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/\n    # env:\n    #     https_proxy: http://DOMAIN\\USERNAME:PASSWORD@SERVER:PORT/\n\n    # # Used to configure the machine's time settings.\n\n    # # Example configuration for cloudflare ntp server.\n    # time:\n    #     disabled: false # Indicates if the time service is disabled for the machine.\n    #     # Specifies time (NTP) servers to use for setting the system time.\n    #     servers:\n    #         - time.cloudflare.com\n    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.\n\n    # # Used to configure the machine's sysctls.\n\n    # # MachineSysctls usage example.\n    # sysctls:\n    #     kernel.domainname: talos.dev\n    #     net.ipv4.ip_forward: \"0\"\n\n    # # Used to configure the machine's sysfs.\n\n    # # MachineSysfs usage example.\n    # sysfs:\n    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance\n\n    # # Machine system disk encryption configuration.\n    # systemDiskEncryption:\n    #     # Ephemeral partition encryption.\n    #     ephemeral:\n    #         provider: luks2 # Encryption provider to use for the encryption.\n    #         # Defines the encryption keys generation and storage method.\n    #         keys:\n    #             - # Deterministically generated key from the node UUID and PartitionLabel.\n    #               nodeID: {}\n    #               slot: 0 # Key slot number for LUKS2 encryption.\n    #         \n    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.\n    #         # cipher: aes-xts-plain64\n\n    #         # # Defines the encryption sector size.\n    #         # blockSize: 4096\n\n    #         # # Additional --perf parameters for the LUKS2 encryption.\n    #         # options:\n    #         #     - no_read_workqueue\n    #         #     - no_write_workqueue\n\n    # # Configures the udev system.\n    # udev:\n    #     # List of udev rules to apply to the udev system\n    #     rules:\n    #         - SUBSYSTEM==\"drm\", KERNEL==\"renderD*\", GROUP=\"44\", MODE=\"0660\"\n\n    # # Configures the logging system.\n    # logging:\n    #     # Logging destination.\n    #     destinations:\n    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are \"tcp\" and \"udp\".\n    #           format: json_lines # Logs format.\n\n    # # Configures the kernel.\n    # kernel:\n    #     # Kernel modules to load.\n    #     modules:\n    #         - name: brtfs # Module name.\n\n    # # Configures the seccomp profiles for the machine.\n    # seccompProfiles:\n    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.\n    #       # The `value` field is used to provide the seccomp profile.\n    #       value:\n    #         defaultAction: SCMP_ACT_LOG\n\n    # # Configures the node labels for the machine.\n\n    # # node labels example.\n    # nodeLabels:\n    #     exampleLabel: exampleLabelValue\n# Provides cluster specific configuration options.\ncluster:\n    id: UGydSTX_e9oWTyB4-f5RAMdLZLdo9JVMc72oN6dleos= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).\n    secret: kX+rpNO7y1pUsbdwiuam8V13CFx1TKKNAOgUGDxbDTQ= # Shared secret of cluster (base64 encoded random 32 bytes).\n    # Provides control plane specific configuration options.\n    controlPlane:\n        endpoint: https://192.168.1.11:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.\n    clusterName: talos-cube # Configures the cluster's name.\n    # Provides cluster specific network configuration options.\n    network:\n        dnsDomain: cluster.local # The domain used by Kubernetes DNS.\n        # The pod subnet CIDR.\n        podSubnets:\n            - 10.244.0.0/16\n        # The service subnet CIDR.\n        serviceSubnets:\n            - 10.96.0.0/12\n        \n        # # The CNI used.\n        # cni:\n        #     name: custom # Name of CNI to use.\n        #     # URLs containing manifests to apply for the CNI.\n        #     urls:\n        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml\n    token: i1i9xd.l83fmpbuw79qpjrb # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.\n    secretboxEncryptionSecret: ilK0qHbFJ+qlZTy7bMBgS+cCMSWaJKpK6k3LwvgZ3dM= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n    # The base64 encoded root certificate authority used by Kubernetes.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVRDZ0F3SUJBZ0lSQUxtZEsxRW5kcTNNdEl6dklsS1V6WG93Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlNekExTVRreE16TTFNRGxhRncwek16QTFNVFl4TXpNMQpNRGxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVJFcHVzN2FlZUNUWDlTemcvRkRVektMV0R0TFBpL1BJN3BUQWNhWkkyVHlUNjhCZnRrK0RxVmJUSUoKNVJ1MFB6WFJwN29iYmk5eFFyNjRqU09JUFpEZm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGSmRqSzdKclNTRXVRNkVncG02aUNuTUZScGUyTUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUVBL2k5b28KclEyeWtBY3dNVGZuaHFJYVBndFFSQUVFbk80Ky9RbXpSYldpQWlCZ3hPNzU0Q3QyWjlTaCtBRnh6U0ovQzc4cApnTy9zME9uQ0QwMzk2bUt5aGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUhPRkNyc1lsdW5jeDlPdzhlcjRINGpKOUhEYzBGdmZabTlOWVA4VXlOV2tvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFUktick8ybm5nazEvVXM0UHhRMU15aTFnN1N6NHZ6eU82VXdIR21TTms4ayt2QVg3WlBnNgpsVzB5Q2VVYnREODEwYWU2RzI0dmNVSyt1STBqaUQyUTN3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.\n    aggregatorCA:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFhZ0F3SUJBZ0lSQU9OUDZ2Rkp0TVVrbk5xbHpBUjh0eFl3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU16QTFNVGt4TXpNMU1EbGFGdzB6TXpBMU1UWXhNek0xTURsYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVNlNnNMYWFhekthWml5MWR6aGhBZ3Q2d2VtckEycG0xYStxbHUwNGZiYTExcHNLUWxxCkxRRFl2NjJUb3F3M0R4WE9CcmowUGZqTFdIcHVEM3g4dzVNbG8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGRW43d2xkSjFLcHlDc0p1aCs5UlNGcHZVSXU5TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklBRlh1MkRMaWhqVG5FaDNIZmVLeXp6M1l1alBpU3R3c0h6T1VpVTBYVTgxQWlFQXJ4VnRKZWNDc1ZPK29yQWcKRUpCSnpOeWVzQTVYSmZQU0xBSDNld1U4bE5rPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUJqWlJvcU01UDJYczN5MUhiNVhoMkpjMGxOLzZVNU54RlJ1aGViUExtSlZvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFbnVyQzJtbXN5bW1Zc3RYYzRZUUlMZXNIcHF3TnFadFd2cXBidE9IMjJ0ZGFiQ2tKYWkwQQoyTCt0azZLc053OFZ6Z2E0OUQzNHkxaDZiZzk4Zk1PVEpRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded private key for service account token generation.\n    serviceAccount:\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUlUL2w3N1FRNGVkcUN3SnVvendhVys5bFNkc1VjY3NoeENyUDd5UFBjQlVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFdFU2TDQ3TTRQci84NVYwTjkzRWpTelZwaGNPQVg1cThsTUxuc0JCcjVnOUlKam04VXZIUApmYWR0NVlOK1FjSjc1ZE1VOGY3czRzTjB0Y2c0dGQrNHVBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # API server specific configuration options.\n    apiServer:\n        image: registry.k8s.io/kube-apiserver:v1.27.1 # The container image used in the API server manifest.\n        # Extra certificate subject alternative names for the API server's certificate.\n        certSANs:\n            - 192.168.1.11\n        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.\n        # Configure the API server admission plugins.\n        admissionControl:\n            - name: PodSecurity # Name is the name of the admission controller.\n              # Configuration is an embedded configuration object to be used as the plugin's\n              configuration:\n                apiVersion: pod-security.admission.config.k8s.io/v1alpha1\n                defaults:\n                    audit: restricted\n                    audit-version: latest\n                    enforce: baseline\n                    enforce-version: latest\n                    warn: restricted\n                    warn-version: latest\n                exemptions:\n                    namespaces:\n                        - kube-system\n                    runtimeClasses: []\n                    usernames: []\n                kind: PodSecurityConfiguration\n        # Configure the API server audit policy.\n        auditPolicy:\n            apiVersion: audit.k8s.io/v1\n            kind: Policy\n            rules:\n                - level: Metadata\n    # Controller manager server specific configuration options.\n    controllerManager:\n        image: registry.k8s.io/kube-controller-manager:v1.27.1 # The container image used in the controller manager manifest.\n    # Kube-proxy server-specific configuration options\n    proxy:\n        image: registry.k8s.io/kube-proxy:v1.27.1 # The container image used in the kube-proxy manifest.\n        \n        # # Disable kube-proxy deployment on cluster bootstrap.\n        # disabled: false\n    # Scheduler server specific configuration options.\n    scheduler:\n        image: registry.k8s.io/kube-scheduler:v1.27.1 # The container image used in the scheduler manifest.\n    # Configures cluster member discovery.\n    discovery:\n        enabled: true # Enable the cluster membership discovery feature.\n        # Configure registries used for cluster member discovery.\n        registries:\n            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information\n            kubernetes:\n                disabled: true # Disable Kubernetes discovery registry.\n            # Service registry is using an external service to push and pull information about cluster members.\n            service: {}\n            # # External service endpoint.\n            # endpoint: https://discovery.talos.dev/\n    # Etcd specific configuration options.\n    etcd:\n        # The `ca` is the root certificate authority of the PKI.\n        ca:\n            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmVENDQVNTZ0F3SUJBZ0lSQU5CZUtYM3VITzloODF1NTJVNDkvUDR3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TXpBMU1Ua3hNek0xTURsYUZ3MHpNekExTVRZeE16TTFNRGxhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFRRCsrWEJsQnlOCkNRSGVPNk5YUnZFRDhpMVZuS213MmZHMU42Y2I1Y1FCaUZZRzY3d0l4Y1g0MFhoalpLVmxnSWthZGI1bjY5VlgKOWlOcHVsV0FNWFJ1bzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk8yZTh5Zm5aSWN3CmZEaWhmSzFscUxZaWY1dDlNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJRWs3V2NXV2g0TEpHajlHREhmMURsZUMKYUljQ2thQm5IR1FLY3ZjTVorOUtBaUFzZjBwb0d0QXo0L1Azais5NXp5aitWb0FjdFdwek9idlRnamlwVEV5UQpPUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUN0VGJYUHlQRDI3bkcvVUNFOHhEeTk4VDRFblhsY21sQkQxZjd1Q3ZqVlNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFQS92bHdaUWNqUWtCM2p1alYwYnhBL0l0Vlp5cHNObnh0VGVuRytYRUFZaFdCdXU4Q01YRgorTkY0WTJTbFpZQ0pHblcrWit2VlYvWWphYnBWZ0RGMGJnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n        \n        # # The container image used to create the etcd service.\n        # image: gcr.io/etcd-development/etcd:v3.5.8\n\n        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.\n        # advertisedSubnets:\n        #     - 10.0.0.0/8\n    # A list of urls that point to additional manifests.\n    extraManifests: []\n    #   - https://www.example.com/manifest1.yaml\n    #   - https://www.example.com/manifest2.yaml\n\n    # A list of inline Kubernetes manifests.\n    inlineManifests: []\n    #   - name: namespace-ci # Name of the manifest.\n    #     contents: |- # Manifest contents as a string.\n    #       apiVersion: v1\n    #       kind: Namespace\n    #       metadata:\n    #       \tname: ci\n\n    \n    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n\n    # # Decryption secret example (do not use in production!).\n    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=\n\n    # # Core DNS specific configuration options.\n    # coreDNS:\n    #     image: docker.io/coredns/coredns:1.10.1 # The `image` field is an override to the default coredns image.\n\n    # # External cloud provider configuration.\n    # externalCloudProvider:\n    #     enabled: true # Enable external cloud provider.\n    #     # A list of urls that point to additional manifests for an external cloud provider.\n    #     manifests:\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml\n\n    # # A map of key value pairs that will be added while fetching the extraManifests.\n    # extraManifestHeaders:\n    #     Token: \"1234567\"\n    #     X-ExtraInfo: info\n\n    # # Settings for admin kubeconfig generation.\n    # adminKubeconfig:\n    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).\n",
            "machine_secrets": {
              "certs": {
                "etcd": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmVENDQVNTZ0F3SUJBZ0lSQU5CZUtYM3VITzloODF1NTJVNDkvUDR3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TXpBMU1Ua3hNek0xTURsYUZ3MHpNekExTVRZeE16TTFNRGxhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFRRCsrWEJsQnlOCkNRSGVPNk5YUnZFRDhpMVZuS213MmZHMU42Y2I1Y1FCaUZZRzY3d0l4Y1g0MFhoalpLVmxnSWthZGI1bjY5VlgKOWlOcHVsV0FNWFJ1bzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk8yZTh5Zm5aSWN3CmZEaWhmSzFscUxZaWY1dDlNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJRWs3V2NXV2g0TEpHajlHREhmMURsZUMKYUljQ2thQm5IR1FLY3ZjTVorOUtBaUFzZjBwb0d0QXo0L1Azais5NXp5aitWb0FjdFdwek9idlRnamlwVEV5UQpPUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUN0VGJYUHlQRDI3bkcvVUNFOHhEeTk4VDRFblhsY21sQkQxZjd1Q3ZqVlNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFQS92bHdaUWNqUWtCM2p1alYwYnhBL0l0Vlp5cHNObnh0VGVuRytYRUFZaFdCdXU4Q01YRgorTkY0WTJTbFpZQ0pHblcrWit2VlYvWWphYnBWZ0RGMGJnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVRDZ0F3SUJBZ0lSQUxtZEsxRW5kcTNNdEl6dklsS1V6WG93Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlNekExTVRreE16TTFNRGxhRncwek16QTFNVFl4TXpNMQpNRGxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVJFcHVzN2FlZUNUWDlTemcvRkRVektMV0R0TFBpL1BJN3BUQWNhWkkyVHlUNjhCZnRrK0RxVmJUSUoKNVJ1MFB6WFJwN29iYmk5eFFyNjRqU09JUFpEZm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGSmRqSzdKclNTRXVRNkVncG02aUNuTUZScGUyTUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUVBL2k5b28KclEyeWtBY3dNVGZuaHFJYVBndFFSQUVFbk80Ky9RbXpSYldpQWlCZ3hPNzU0Q3QyWjlTaCtBRnh6U0ovQzc4cApnTy9zME9uQ0QwMzk2bUt5aGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUhPRkNyc1lsdW5jeDlPdzhlcjRINGpKOUhEYzBGdmZabTlOWVA4VXlOV2tvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFUktick8ybm5nazEvVXM0UHhRMU15aTFnN1N6NHZ6eU82VXdIR21TTms4ayt2QVg3WlBnNgpsVzB5Q2VVYnREODEwYWU2RzI0dmNVSyt1STBqaUQyUTN3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s_aggregator": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFhZ0F3SUJBZ0lSQU9OUDZ2Rkp0TVVrbk5xbHpBUjh0eFl3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU16QTFNVGt4TXpNMU1EbGFGdzB6TXpBMU1UWXhNek0xTURsYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVNlNnNMYWFhekthWml5MWR6aGhBZ3Q2d2VtckEycG0xYStxbHUwNGZiYTExcHNLUWxxCkxRRFl2NjJUb3F3M0R4WE9CcmowUGZqTFdIcHVEM3g4dzVNbG8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGRW43d2xkSjFLcHlDc0p1aCs5UlNGcHZVSXU5TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklBRlh1MkRMaWhqVG5FaDNIZmVLeXp6M1l1alBpU3R3c0h6T1VpVTBYVTgxQWlFQXJ4VnRKZWNDc1ZPK29yQWcKRUpCSnpOeWVzQTVYSmZQU0xBSDNld1U4bE5rPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUJqWlJvcU01UDJYczN5MUhiNVhoMkpjMGxOLzZVNU54RlJ1aGViUExtSlZvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFbnVyQzJtbXN5bW1Zc3RYYzRZUUlMZXNIcHF3TnFadFd2cXBidE9IMjJ0ZGFiQ2tKYWkwQQoyTCt0azZLc053OFZ6Z2E0OUQzNHkxaDZiZzk4Zk1PVEpRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s_serviceaccount": {
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUlUL2w3N1FRNGVkcUN3SnVvendhVys5bFNkc1VjY3NoeENyUDd5UFBjQlVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFdFU2TDQ3TTRQci84NVYwTjkzRWpTelZwaGNPQVg1cThsTUxuc0JCcjVnOUlKam04VXZIUApmYWR0NVlOK1FjSjc1ZE1VOGY3czRzTjB0Y2c0dGQrNHVBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "os": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBdWVzeG9nc25tTG9MdjBCdEF6WHptREFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qTXdOVEU1TVRNek5UQTVXaGNOTXpNd05URTJNVE16TlRBNVdqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQU9PTGQxdG9XSnUyUFlyQVZpdTRaaHZYOHhock8xeXVWVlk2CnpQamh4SkIwbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRlBTbi9HdGR2b2ErQkgyVgp2b252dnVUUEtscUZNQVVHQXl0bGNBTkJBQmFzTGlkRC8rREM1dU0weFNWN3RRazR3d05vUXJRdEVFMGE5UDlKCkpyNXY3NDRFbVltcllUZVc4K05wdmFZc0VtTTJ1V3hMYlJnbU1aYjdnQWd5THdNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJR3l2OG8rNVNrcm0rcWR6eklKeEJ2dnpJWW5kSVprTFc2ZkgxVjBrNHliTwotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
                }
              },
              "cluster": {
                "id": "UGydSTX_e9oWTyB4-f5RAMdLZLdo9JVMc72oN6dleos=",
                "secret": "kX+rpNO7y1pUsbdwiuam8V13CFx1TKKNAOgUGDxbDTQ="
              },
              "secrets": {
                "aescbc_encryption_secret": null,
                "bootstrap_token": "i1i9xd.l83fmpbuw79qpjrb",
                "secretbox_encryption_secret": "ilK0qHbFJ+qlZTy7bMBgS+cCMSWaJKpK6k3LwvgZ3dM="
              },
              "trustdinfo": {
                "token": "x8c0sb.hoxte580hjlzq26y"
              }
            },
            "machine_type": "controlplane",
            "talos_version": "v1.4"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "trustdinfo"
              },
              {
                "type": "get_attr",
                "value": "token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s_serviceaccount"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "os"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "etcd"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s_aggregator"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "cluster"
              },
              {
                "type": "get_attr",
                "value": "secret"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "secretbox_encryption_secret"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "aescbc_encryption_secret"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "bootstrap_token"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "talos_machine_secrets",
      "name": "cube",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "client_configuration": {
              "ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBdWVzeG9nc25tTG9MdjBCdEF6WHptREFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qTXdOVEU1TVRNek5UQTVXaGNOTXpNd05URTJNVE16TlRBNVdqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQU9PTGQxdG9XSnUyUFlyQVZpdTRaaHZYOHhock8xeXVWVlk2CnpQamh4SkIwbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRlBTbi9HdGR2b2ErQkgyVgp2b252dnVUUEtscUZNQVVHQXl0bGNBTkJBQmFzTGlkRC8rREM1dU0weFNWN3RRazR3d05vUXJRdEVFMGE5UDlKCkpyNXY3NDRFbVltcllUZVc4K05wdmFZc0VtTTJ1V3hMYlJnbU1aYjdnQWd5THdNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEEvbDNlNnNuWFAyNmw0ajVpS3plaVVNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNVGt4TXpNMU1EbGFGdzB6TXpBMU1UWXhNek0xTURsYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQTJMNUVQUEh6WUV4T1dzcDZwenpyOXBxdTdybTdUTFpvCmt3K0dCSGtNQmVpalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCVDBwL3hyWGI2R3ZnUjlsYjZKNzc3a3p5cGFoVEFGQmdNclpYQURRUUR6NXUwawptQ3RjTEx5STFoa0FaSHgyR1k5RTNIdThxTFRub2JqZ1BNU1c5Q2EzT2E3TnF1YS9zUWNMVC83YTR1emNaMjJyCnFIZWJ6bWVjbU9Vemo5MEYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
              "client_key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJRy91ZlZNZnRXci9XWFZrT1NvMnhtMDJCMnZ2b2F4ZFVOWS9MaTFLemJEcwotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "id": "machine_secrets",
            "machine_secrets": {
              "certs": {
                "etcd": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmVENDQVNTZ0F3SUJBZ0lSQU5CZUtYM3VITzloODF1NTJVNDkvUDR3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TXpBMU1Ua3hNek0xTURsYUZ3MHpNekExTVRZeE16TTFNRGxhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFRRCsrWEJsQnlOCkNRSGVPNk5YUnZFRDhpMVZuS213MmZHMU42Y2I1Y1FCaUZZRzY3d0l4Y1g0MFhoalpLVmxnSWthZGI1bjY5VlgKOWlOcHVsV0FNWFJ1bzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk8yZTh5Zm5aSWN3CmZEaWhmSzFscUxZaWY1dDlNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJRWs3V2NXV2g0TEpHajlHREhmMURsZUMKYUljQ2thQm5IR1FLY3ZjTVorOUtBaUFzZjBwb0d0QXo0L1Azais5NXp5aitWb0FjdFdwek9idlRnamlwVEV5UQpPUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUN0VGJYUHlQRDI3bkcvVUNFOHhEeTk4VDRFblhsY21sQkQxZjd1Q3ZqVlNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFQS92bHdaUWNqUWtCM2p1alYwYnhBL0l0Vlp5cHNObnh0VGVuRytYRUFZaFdCdXU4Q01YRgorTkY0WTJTbFpZQ0pHblcrWit2VlYvWWphYnBWZ0RGMGJnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVRDZ0F3SUJBZ0lSQUxtZEsxRW5kcTNNdEl6dklsS1V6WG93Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlNekExTVRreE16TTFNRGxhRncwek16QTFNVFl4TXpNMQpNRGxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVJFcHVzN2FlZUNUWDlTemcvRkRVektMV0R0TFBpL1BJN3BUQWNhWkkyVHlUNjhCZnRrK0RxVmJUSUoKNVJ1MFB6WFJwN29iYmk5eFFyNjRqU09JUFpEZm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGSmRqSzdKclNTRXVRNkVncG02aUNuTUZScGUyTUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUVBL2k5b28KclEyeWtBY3dNVGZuaHFJYVBndFFSQUVFbk80Ky9RbXpSYldpQWlCZ3hPNzU0Q3QyWjlTaCtBRnh6U0ovQzc4cApnTy9zME9uQ0QwMzk2bUt5aGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUhPRkNyc1lsdW5jeDlPdzhlcjRINGpKOUhEYzBGdmZabTlOWVA4VXlOV2tvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFUktick8ybm5nazEvVXM0UHhRMU15aTFnN1N6NHZ6eU82VXdIR21TTms4ayt2QVg3WlBnNgpsVzB5Q2VVYnREODEwYWU2RzI0dmNVSyt1STBqaUQyUTN3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s_aggregator": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFhZ0F3SUJBZ0lSQU9OUDZ2Rkp0TVVrbk5xbHpBUjh0eFl3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU16QTFNVGt4TXpNMU1EbGFGdzB6TXpBMU1UWXhNek0xTURsYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVNlNnNMYWFhekthWml5MWR6aGhBZ3Q2d2VtckEycG0xYStxbHUwNGZiYTExcHNLUWxxCkxRRFl2NjJUb3F3M0R4WE9CcmowUGZqTFdIcHVEM3g4dzVNbG8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGRW43d2xkSjFLcHlDc0p1aCs5UlNGcHZVSXU5TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklBRlh1MkRMaWhqVG5FaDNIZmVLeXp6M1l1alBpU3R3c0h6T1VpVTBYVTgxQWlFQXJ4VnRKZWNDc1ZPK29yQWcKRUpCSnpOeWVzQTVYSmZQU0xBSDNld1U4bE5rPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUJqWlJvcU01UDJYczN5MUhiNVhoMkpjMGxOLzZVNU54RlJ1aGViUExtSlZvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFbnVyQzJtbXN5bW1Zc3RYYzRZUUlMZXNIcHF3TnFadFd2cXBidE9IMjJ0ZGFiQ2tKYWkwQQoyTCt0azZLc053OFZ6Z2E0OUQzNHkxaDZiZzk4Zk1PVEpRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s_serviceaccount": {
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUlUL2w3N1FRNGVkcUN3SnVvendhVys5bFNkc1VjY3NoeENyUDd5UFBjQlVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFdFU2TDQ3TTRQci84NVYwTjkzRWpTelZwaGNPQVg1cThsTUxuc0JCcjVnOUlKam04VXZIUApmYWR0NVlOK1FjSjc1ZE1VOGY3czRzTjB0Y2c0dGQrNHVBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "os": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBdWVzeG9nc25tTG9MdjBCdEF6WHptREFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qTXdOVEU1TVRNek5UQTVXaGNOTXpNd05URTJNVE16TlRBNVdqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQU9PTGQxdG9XSnUyUFlyQVZpdTRaaHZYOHhock8xeXVWVlk2CnpQamh4SkIwbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRlBTbi9HdGR2b2ErQkgyVgp2b252dnVUUEtscUZNQVVHQXl0bGNBTkJBQmFzTGlkRC8rREM1dU0weFNWN3RRazR3d05vUXJRdEVFMGE5UDlKCkpyNXY3NDRFbVltcllUZVc4K05wdmFZc0VtTTJ1V3hMYlJnbU1aYjdnQWd5THdNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJR3l2OG8rNVNrcm0rcWR6eklKeEJ2dnpJWW5kSVprTFc2ZkgxVjBrNHliTwotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
                }
              },
              "cluster": {
                "id": "UGydSTX_e9oWTyB4-f5RAMdLZLdo9JVMc72oN6dleos=",
                "secret": "kX+rpNO7y1pUsbdwiuam8V13CFx1TKKNAOgUGDxbDTQ="
              },
              "secrets": {
                "aescbc_encryption_secret": null,
                "bootstrap_token": "i1i9xd.l83fmpbuw79qpjrb",
                "secretbox_encryption_secret": "ilK0qHbFJ+qlZTy7bMBgS+cCMSWaJKpK6k3LwvgZ3dM="
              },
              "trustdinfo": {
                "token": "x8c0sb.hoxte580hjlzq26y"
              }
            },
            "talos_version": "v1.4"
          },
          "sensitive_attributes": []
        }
      ]
    }
  ],
  "check_results": null
}
