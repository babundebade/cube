{
  "version": 4,
  "terraform_version": "1.4.6",
  "serial": 97,
  "lineage": "d4b2e6a0-6332-3284-9005-17f5bb82d040",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "talos_client_configuration",
      "name": "controller",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "client_configuration": {
              "ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEIydjBJd2s0aitaM2FvQ3ZHZmduU2JNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak14TWpBNU1qQmFGdzB6TXpBMU1qQXhNakE1TWpCYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBUkNmS3JRaVpkOUZSUmp4V0cyVisrRkIwMU9Tc3VqODIwbUVOClZBNHJ3Y3VqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVb1dpM3ZrTWdMa2YwRWk5MwpvWFF4UFdPd2pZQXdCUVlESzJWd0EwRUFYN1kzTDhUQXFJOS9qWmp6WTE2aVZLSExUTUJJRkpqZWVYRXk5eHNWCnpFTWd5ek5xdUxIWW43Tk9LOVFxSU9LcXBXN1BmZUpZam5INStpRnNlSncvQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEE4b2lXcUZQWjBGK3dKSmtZOXlkTFVNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak14TWpBNU1qQmFGdzB6TXpBMU1qQXhNakE1TWpCYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQVZkN1hIOVphV2dOYlh1M0hHQ09UNU5QZmFuUG90cWh4ClhPTVNxWkxuMlNTalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCU2hhTGUrUXlBdVIvUVNMM2VoZERFOVk3Q05nREFGQmdNclpYQURRUUJVWWd5agpEVHJlM2pkWVFtY0EzUC9uUngxTzlqS2E5VlNYSitKWnR3cDJMMlNoZTZXRWo5dmJjb0c2VU14MjJaeUZCNkppCmlsMjBvMERnYTZVMFJXY0YKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
              "client_key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJSXQ3YkFyZUVNbHVRclNtcVowK2V2dXA0U2dlekJqc3RZU29xUW5nTEF6bAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "cluster_name": "talos-cube",
            "endpoints": null,
            "id": "talos-cube",
            "nodes": [
              "192.168.1.11"
            ],
            "talos_config": "context: talos-cube\ncontexts:\n    talos-cube:\n        endpoints: []\n        nodes:\n            - 192.168.1.11\n        ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEIydjBJd2s0aitaM2FvQ3ZHZmduU2JNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak14TWpBNU1qQmFGdzB6TXpBMU1qQXhNakE1TWpCYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBUkNmS3JRaVpkOUZSUmp4V0cyVisrRkIwMU9Tc3VqODIwbUVOClZBNHJ3Y3VqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVb1dpM3ZrTWdMa2YwRWk5MwpvWFF4UFdPd2pZQXdCUVlESzJWd0EwRUFYN1kzTDhUQXFJOS9qWmp6WTE2aVZLSExUTUJJRkpqZWVYRXk5eHNWCnpFTWd5ek5xdUxIWW43Tk9LOVFxSU9LcXBXN1BmZUpZam5INStpRnNlSncvQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEE4b2lXcUZQWjBGK3dKSmtZOXlkTFVNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak14TWpBNU1qQmFGdzB6TXpBMU1qQXhNakE1TWpCYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQVZkN1hIOVphV2dOYlh1M0hHQ09UNU5QZmFuUG90cWh4ClhPTVNxWkxuMlNTalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCU2hhTGUrUXlBdVIvUVNMM2VoZERFOVk3Q05nREFGQmdNclpYQURRUUJVWWd5agpEVHJlM2pkWVFtY0EzUC9uUngxTzlqS2E5VlNYSitKWnR3cDJMMlNoZTZXRWo5dmJjb0c2VU14MjJaeUZCNkppCmlsMjBvMERnYTZVMFJXY0YKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJSXQ3YkFyZUVNbHVRclNtcVowK2V2dXA0U2dlekJqc3RZU29xUW5nTEF6bAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K\n"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "client_configuration"
              },
              {
                "type": "get_attr",
                "value": "client_key"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "talos_machine_configuration",
      "name": "controller",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cluster_endpoint": "https://192.168.1.11:6443",
            "cluster_name": "talos-cube",
            "config_patches": null,
            "docs": true,
            "examples": true,
            "id": "talos-cube",
            "kubernetes_version": "1.27.1",
            "machine_configuration": "version: v1alpha1 # Indicates the schema used to decode the contents.\ndebug: false # Enable verbose logging to the console.\npersist: true # Indicates whether to pull the machine config upon every boot.\n# Provides machine specific configuration options.\nmachine:\n    type: controlplane # Defines the role of the machine within the cluster.\n    token: xfk926.lyt5wku6h8gjlco2 # The `token` is used by a machine to join the PKI of the cluster.\n    # The root certificate authority of the PKI.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEIydjBJd2s0aitaM2FvQ3ZHZmduU2JNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak14TWpBNU1qQmFGdzB6TXpBMU1qQXhNakE1TWpCYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBUkNmS3JRaVpkOUZSUmp4V0cyVisrRkIwMU9Tc3VqODIwbUVOClZBNHJ3Y3VqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVb1dpM3ZrTWdMa2YwRWk5MwpvWFF4UFdPd2pZQXdCUVlESzJWd0EwRUFYN1kzTDhUQXFJOS9qWmp6WTE2aVZLSExUTUJJRkpqZWVYRXk5eHNWCnpFTWd5ek5xdUxIWW43Tk9LOVFxSU9LcXBXN1BmZUpZam5INStpRnNlSncvQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJSE44RExiUVlOTmJjYi9CNHlDK0dWQ1Npd3h3MzM1SENocmtVMGhoMWtEeAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K\n    # Extra certificate subject alternative names for the machine's certificate.\n    certSANs: []\n    #   # Uncomment this to enable SANs.\n    #   - 10.0.0.10\n    #   - 172.16.0.10\n    #   - 192.168.0.10\n\n    # Used to provide additional options to the kubelet.\n    kubelet:\n        image: ghcr.io/siderolabs/kubelet:v1.27.1 # The `image` field is an optional reference to an alternative kubelet image.\n        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.\n        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.\n        \n        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.\n        # clusterDNS:\n        #     - 10.96.0.10\n        #     - 169.254.2.53\n\n        # # The `extraArgs` field is used to provide additional flags to the kubelet.\n        # extraArgs:\n        #     key: value\n\n        # # The `extraMounts` field is used to add additional mounts to the kubelet container.\n        # extraMounts:\n        #     - destination: /var/lib/example\n        #       type: bind\n        #       source: /var/lib/example\n        #       options:\n        #         - bind\n        #         - rshared\n        #         - rw\n\n        # # The `extraConfig` field is used to provide kubelet configuration overrides.\n        # extraConfig:\n        #     serverTLSBootstrap: true\n\n        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.\n        # nodeIP:\n        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.\n        #     validSubnets:\n        #         - 10.0.0.0/8\n        #         - '!10.0.0.3/32'\n        #         - fdc7::/16\n    # Provides machine specific network configuration options.\n    network: {}\n    # # `interfaces` is used to define the network interface configuration.\n    # interfaces:\n    #     - interface: eth0 # The interface name.\n    #       # Assigns static IP addresses to the interface.\n    #       addresses:\n    #         - 192.168.2.0/24\n    #       # A list of routes associated with the interface.\n    #       routes:\n    #         - network: 0.0.0.0/0 # The route's network (destination).\n    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).\n    #           metric: 1024 # The optional metric for the route.\n    #       mtu: 1500 # The interface's MTU.\n    #       \n    #       # # Picks a network device using the selector.\n\n    #       # # select a device with bus prefix 00:*.\n    #       # deviceSelector:\n    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n    #       # deviceSelector:\n    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #     driver: virtio # Kernel driver, supports matching by wildcard.\n    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n    #       # deviceSelector:\n    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #       driver: virtio # Kernel driver, supports matching by wildcard.\n\n    #       # # Bond specific options.\n    #       # bond:\n    #       #     # The interfaces that make up the bond.\n    #       #     interfaces:\n    #       #         - eth0\n    #       #         - eth1\n    #       #     # Picks a network device using the selector.\n    #       #     deviceSelectors:\n    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #           driver: virtio # Kernel driver, supports matching by wildcard.\n    #       #     mode: 802.3ad # A bond option.\n    #       #     lacpRate: fast # A bond option.\n\n    #       # # Bridge specific options.\n    #       # bridge:\n    #       #     # The interfaces that make up the bridge.\n    #       #     interfaces:\n    #       #         - eth0\n    #       #         - eth1\n    #       #     # A bridge option.\n    #       #     stp:\n    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.\n\n    #       # # Indicates if DHCP should be used to configure the interface.\n    #       # dhcp: true\n\n    #       # # DHCP specific options.\n    #       # dhcpOptions:\n    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.\n\n    #       # # Wireguard specific configuration.\n\n    #       # # wireguard server example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     listenPort: 51111 # Specifies a device's listening port.\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n    #       # # wireguard peer example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.\n    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n\n    #       # # Virtual (shared) IP address configuration.\n\n    #       # # layer2 vip example\n    #       # vip:\n    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.\n\n    # # Used to statically set the nameservers for the machine.\n    # nameservers:\n    #     - 8.8.8.8\n    #     - 1.1.1.1\n\n    # # Allows for extra entries to be added to the `/etc/hosts` file\n    # extraHostEntries:\n    #     - ip: 192.168.1.100 # The IP of the host.\n    #       # The host alias.\n    #       aliases:\n    #         - example\n    #         - example.domain.tld\n\n    # # Configures KubeSpan feature.\n    # kubespan:\n    #     enabled: true # Enable the KubeSpan feature.\n\n    # Used to provide instructions for installations.\n    install:\n        disk: /dev/sda # The disk used for installations.\n        image: ghcr.io/siderolabs/installer:v1.4.0 # Allows for supplying the image used to perform the installation.\n        bootloader: true # Indicates if a bootloader should be installed.\n        wipe: false # Indicates if the installation disk should be wiped at installation time.\n        \n        # # Look up disk using disk attributes like model, size, serial and others.\n        # diskSelector:\n        #     size: 4GB # Disk size.\n        #     model: WDC* # Disk model `/sys/block/\u003cdev\u003e/device/model`.\n        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.\n\n        # # Allows for supplying extra kernel args via the bootloader.\n        # extraKernelArgs:\n        #     - talos.platform=metal\n        #     - reboot=k\n\n        # # Allows for supplying additional system extension images to install on top of base Talos image.\n        # extensions:\n        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.\n    # Used to configure the machine's container image registry mirrors.\n    registries: {}\n    # # Specifies mirror configuration for each registry host namespace.\n    # mirrors:\n    #     ghcr.io:\n    #         # List of endpoints (URLs) for registry mirrors to use.\n    #         endpoints:\n    #             - https://registry.insecure\n    #             - https://ghcr.io/v2/\n\n    # # Specifies TLS \u0026 auth configuration for HTTPS image registries.\n    # config:\n    #     registry.insecure:\n    #         # The TLS configuration for the registry.\n    #         tls:\n    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).\n    #             \n    #             # # Enable mutual TLS authentication with the registry.\n    #             # clientIdentity:\n    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #         \n    #         # # The auth configuration for this registry.\n    #         # auth:\n    #         #     username: username # Optional registry authentication.\n    #         #     password: password # Optional registry authentication.\n\n    # Features describe individual Talos features that can be switched on or off.\n    features:\n        rbac: true # Enable role-based access control (RBAC).\n        stableHostname: true # Enable stable default hostname.\n        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.\n        \n        # # Configure Talos API access from Kubernetes pods.\n        # kubernetesTalosAPIAccess:\n        #     enabled: true # Enable Talos API access from Kubernetes pods.\n        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.\n        #     allowedRoles:\n        #         - os:reader\n        #     # The list of Kubernetes namespaces Talos API access is available from.\n        #     allowedKubernetesNamespaces:\n        #         - kube-system\n    \n    # # Provides machine specific control plane configuration options.\n\n    # # ControlPlane definition example.\n    # controlPlane:\n    #     # Controller manager machine specific configuration options.\n    #     controllerManager:\n    #         disabled: false # Disable kube-controller-manager on the node.\n    #     # Scheduler machine specific configuration options.\n    #     scheduler:\n    #         disabled: true # Disable kube-scheduler on the node.\n\n    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.\n\n    # # nginx static pod.\n    # pods:\n    #     - apiVersion: v1\n    #       kind: pod\n    #       metadata:\n    #         name: nginx\n    #       spec:\n    #         containers:\n    #             - image: nginx\n    #               name: nginx\n\n    # # Used to partition, format and mount additional disks.\n\n    # # MachineDisks list example.\n    # disks:\n    #     - device: /dev/sdb # The name of the disk to use.\n    #       # A list of partitions to create on the disk.\n    #       partitions:\n    #         - mountpoint: /var/mnt/extra # Where to mount the partition.\n    #           \n    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.\n\n    #           # # Human readable representation.\n    #           # size: 100 MB\n    #           # # Precise value in bytes.\n    #           # size: 1073741824\n\n    # # Allows the addition of user specified files.\n\n    # # MachineFiles usage example.\n    # files:\n    #     - content: '...' # The contents of the file.\n    #       permissions: 0o666 # The file's permissions in octal.\n    #       path: /tmp/file.txt # The path of the file.\n    #       op: append # The operation to use\n\n    # # The `env` field allows for the addition of environment variables.\n\n    # # Environment variables definition examples.\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: info\n    #     GRPC_GO_LOG_VERBOSITY_LEVEL: \"99\"\n    #     https_proxy: http://SERVER:PORT/\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: error\n    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/\n    # env:\n    #     https_proxy: http://DOMAIN\\USERNAME:PASSWORD@SERVER:PORT/\n\n    # # Used to configure the machine's time settings.\n\n    # # Example configuration for cloudflare ntp server.\n    # time:\n    #     disabled: false # Indicates if the time service is disabled for the machine.\n    #     # Specifies time (NTP) servers to use for setting the system time.\n    #     servers:\n    #         - time.cloudflare.com\n    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.\n\n    # # Used to configure the machine's sysctls.\n\n    # # MachineSysctls usage example.\n    # sysctls:\n    #     kernel.domainname: talos.dev\n    #     net.ipv4.ip_forward: \"0\"\n\n    # # Used to configure the machine's sysfs.\n\n    # # MachineSysfs usage example.\n    # sysfs:\n    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance\n\n    # # Machine system disk encryption configuration.\n    # systemDiskEncryption:\n    #     # Ephemeral partition encryption.\n    #     ephemeral:\n    #         provider: luks2 # Encryption provider to use for the encryption.\n    #         # Defines the encryption keys generation and storage method.\n    #         keys:\n    #             - # Deterministically generated key from the node UUID and PartitionLabel.\n    #               nodeID: {}\n    #               slot: 0 # Key slot number for LUKS2 encryption.\n    #         \n    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.\n    #         # cipher: aes-xts-plain64\n\n    #         # # Defines the encryption sector size.\n    #         # blockSize: 4096\n\n    #         # # Additional --perf parameters for the LUKS2 encryption.\n    #         # options:\n    #         #     - no_read_workqueue\n    #         #     - no_write_workqueue\n\n    # # Configures the udev system.\n    # udev:\n    #     # List of udev rules to apply to the udev system\n    #     rules:\n    #         - SUBSYSTEM==\"drm\", KERNEL==\"renderD*\", GROUP=\"44\", MODE=\"0660\"\n\n    # # Configures the logging system.\n    # logging:\n    #     # Logging destination.\n    #     destinations:\n    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are \"tcp\" and \"udp\".\n    #           format: json_lines # Logs format.\n\n    # # Configures the kernel.\n    # kernel:\n    #     # Kernel modules to load.\n    #     modules:\n    #         - name: brtfs # Module name.\n\n    # # Configures the seccomp profiles for the machine.\n    # seccompProfiles:\n    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.\n    #       # The `value` field is used to provide the seccomp profile.\n    #       value:\n    #         defaultAction: SCMP_ACT_LOG\n\n    # # Configures the node labels for the machine.\n\n    # # node labels example.\n    # nodeLabels:\n    #     exampleLabel: exampleLabelValue\n# Provides cluster specific configuration options.\ncluster:\n    id: 9ps5BLGGz5CNT9mzpXI6qQ_5VpJT6U1EGiJAeqGzk7w= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).\n    secret: lgy1nE/i/VBjnv8an71wxD4vuxOhNCUTXtRCMgwcFck= # Shared secret of cluster (base64 encoded random 32 bytes).\n    # Provides control plane specific configuration options.\n    controlPlane:\n        endpoint: https://192.168.1.11:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.\n    clusterName: talos-cube # Configures the cluster's name.\n    # Provides cluster specific network configuration options.\n    network:\n        dnsDomain: cluster.local # The domain used by Kubernetes DNS.\n        # The pod subnet CIDR.\n        podSubnets:\n            - 10.244.0.0/16\n        # The service subnet CIDR.\n        serviceSubnets:\n            - 10.96.0.0/12\n        \n        # # The CNI used.\n        # cni:\n        #     name: custom # Name of CNI to use.\n        #     # URLs containing manifests to apply for the CNI.\n        #     urls:\n        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml\n    token: fu1a2c.ft9lc85j9w6y3pzb # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.\n    secretboxEncryptionSecret: 24HhHosBntqfPhhGk5y/ZdMtsN225kjugBWE9nXcYYE= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n    # The base64 encoded root certificate authority used by Kubernetes.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVRDZ0F3SUJBZ0lSQU0yaTRFZjJyU0QwQjFKcktQOTNLdGN3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlNekExTWpNeE1qQTVNakJhRncwek16QTFNakF4TWpBNQpNakJhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVNVMXErMmhPYUovYlpjVHA3V1NBNy8xTFZzSjhNQmdtM3NuL2hOZWhiVXVEVjlLa0FpcEZWZWRjUTcKZUtVeUxGeTNYWWsyc3RJZW5LWlhCQ1pxWCtBb28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGQk5IMGM1T0dpU1I4Q0RFaHlLemFNUWNDU3EyTUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUZoZFl0RVMKS2hNNFpSclkzaytLb2wvMmFJWTJGeCtTbUFCWXl3QVNvNDlGQWlBTW9kVWdOL1NRWnl0VWpROFloS3Z0L2xKcgp5S2VpSEIrM1NUbDdvdXd5K0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUl3ZEZtNEVDMHJQU1o0a1Y5ak02dUlPWFdmQVFOTk9sbDZOUGpBZ2s4eldvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFbE5hdnRvVG1pZjIyWEU2ZTFrZ08vOVMxYkNmREFZSnQ3Si80VFhvVzFMZzFmU3BBSXFSVgpYblhFTzNpbE1peGN0MTJKTnJMU0hweW1Wd1FtYWwvZ0tBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.\n    aggregatorCA:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFhZ0F3SUJBZ0lSQU5LL1NXZFl0V3JTc1k5Y1pkRUFvWjR3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU16QTFNak14TWpBNU1qQmFGdzB6TXpBMU1qQXhNakE1TWpCYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVIvQ2dWSzhiWCs5d1BvWVJPMkR2Vjg0Rk9SdTMxWGxjTUczaXBrVmRoSEdEckR1NmJXCldJYUhuV1F4UHRmMkNKQXpVa0pzWXgrMXlickxPRC84TU9NUW8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGS1JFK3FFWmh2Q01DR2tOSy9NZjJYR3VzOW5RTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklRQ3JSK2NiUDJueXpPZHVzT2d4KzdkbUJmMHNFZHhsbklMSkdkTFZCOHF1K1FJZ1RTbmJ6eXphd1g2dFZPRmgKMzF3a1ZlaWZBK1E5YVFRcktBVnpjeUY4RUY0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU13bXczeU1LSEFuUjUvMkRKOVlBTlpHdS9UbHYrRDJiTkd2SFJGNXBFaDBvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFZndvRlN2RzEvdmNENkdFVHRnNzFmT0JUa2J0OVY1WERCdDRxWkZYWVJ4ZzZ3N3VtMWxpRwpoNTFrTVQ3WDlnaVFNMUpDYkdNZnRjbTZ5emcvL0REakVBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded private key for service account token generation.\n    serviceAccount:\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU5LTU41a1Q3dTdIR1VoL0tyYzNLc0xvUVIxOTllZ2tHWWJ0eElLTkJNVVJvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFM3l4SHhiaUMwaUNCWkV4Q0VKaThEVEFDTTFRSnlkb242bFNTWmI0cVVhVUhpcUQ3d1ZJcQptR0FxM1pzQkpTbHdzRTJBZ1g0MEszZ2d3L3NFRkcxNWxBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # API server specific configuration options.\n    apiServer:\n        image: registry.k8s.io/kube-apiserver:v1.27.1 # The container image used in the API server manifest.\n        # Extra certificate subject alternative names for the API server's certificate.\n        certSANs:\n            - 192.168.1.11\n        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.\n        # Configure the API server admission plugins.\n        admissionControl:\n            - name: PodSecurity # Name is the name of the admission controller.\n              # Configuration is an embedded configuration object to be used as the plugin's\n              configuration:\n                apiVersion: pod-security.admission.config.k8s.io/v1alpha1\n                defaults:\n                    audit: restricted\n                    audit-version: latest\n                    enforce: baseline\n                    enforce-version: latest\n                    warn: restricted\n                    warn-version: latest\n                exemptions:\n                    namespaces:\n                        - kube-system\n                    runtimeClasses: []\n                    usernames: []\n                kind: PodSecurityConfiguration\n        # Configure the API server audit policy.\n        auditPolicy:\n            apiVersion: audit.k8s.io/v1\n            kind: Policy\n            rules:\n                - level: Metadata\n    # Controller manager server specific configuration options.\n    controllerManager:\n        image: registry.k8s.io/kube-controller-manager:v1.27.1 # The container image used in the controller manager manifest.\n    # Kube-proxy server-specific configuration options\n    proxy:\n        image: registry.k8s.io/kube-proxy:v1.27.1 # The container image used in the kube-proxy manifest.\n        \n        # # Disable kube-proxy deployment on cluster bootstrap.\n        # disabled: false\n    # Scheduler server specific configuration options.\n    scheduler:\n        image: registry.k8s.io/kube-scheduler:v1.27.1 # The container image used in the scheduler manifest.\n    # Configures cluster member discovery.\n    discovery:\n        enabled: true # Enable the cluster membership discovery feature.\n        # Configure registries used for cluster member discovery.\n        registries:\n            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information\n            kubernetes:\n                disabled: true # Disable Kubernetes discovery registry.\n            # Service registry is using an external service to push and pull information about cluster members.\n            service: {}\n            # # External service endpoint.\n            # endpoint: https://discovery.talos.dev/\n    # Etcd specific configuration options.\n    etcd:\n        # The `ca` is the root certificate authority of the PKI.\n        ca:\n            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQU83b2hiMkZOb0hvTWdGVitKVmVyZ2d3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TXpBMU1qTXhNakE1TWpCYUZ3MHpNekExTWpBeE1qQTVNakJhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFRWmQxbWZaMVZzCkZ4VmpSN0dySmVjSVZGMFlwaFpqdlJtTjhtbWx3bFBJbEVGenFnc0hkQkRONFVrZnRLdUNzNnJjY3AzcDEvejAKR3ZNbUpaVGNkRUhXbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk5ITzlucS81Y3QzCnlLS000NmhNQnEzWEptSklNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJRVRoSXF1bjB5VTdKM3dkRFNNVFJsUFcKTEZFR0pIZkRNQWZSakRHajIyOUhBaUVBNFhabVhlZ0dHVjF5bDBaNmpPM0UzcnJHcThrQldRN0xDZ0VDT25jbgpoK1k9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVmamJVUUpkemZ4K3I0aFozS1dWeDluaUFtemF1RGhBTERqVkhsemU5aG5vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFR1hkWm4yZFZiQmNWWTBleHF5WG5DRlJkR0tZV1k3MFpqZkpwcGNKVHlKUkJjNm9MQjNRUQp6ZUZKSDdTcmdyT3EzSEtkNmRmODlCcnpKaVdVM0hSQjFnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n        \n        # # The container image used to create the etcd service.\n        # image: gcr.io/etcd-development/etcd:v3.5.8\n\n        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.\n        # advertisedSubnets:\n        #     - 10.0.0.0/8\n    # A list of urls that point to additional manifests.\n    extraManifests: []\n    #   - https://www.example.com/manifest1.yaml\n    #   - https://www.example.com/manifest2.yaml\n\n    # A list of inline Kubernetes manifests.\n    inlineManifests: []\n    #   - name: namespace-ci # Name of the manifest.\n    #     contents: |- # Manifest contents as a string.\n    #       apiVersion: v1\n    #       kind: Namespace\n    #       metadata:\n    #       \tname: ci\n\n    \n    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n\n    # # Decryption secret example (do not use in production!).\n    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=\n\n    # # Core DNS specific configuration options.\n    # coreDNS:\n    #     image: docker.io/coredns/coredns:1.10.1 # The `image` field is an override to the default coredns image.\n\n    # # External cloud provider configuration.\n    # externalCloudProvider:\n    #     enabled: true # Enable external cloud provider.\n    #     # A list of urls that point to additional manifests for an external cloud provider.\n    #     manifests:\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml\n\n    # # A map of key value pairs that will be added while fetching the extraManifests.\n    # extraManifestHeaders:\n    #     Token: \"1234567\"\n    #     X-ExtraInfo: info\n\n    # # Settings for admin kubeconfig generation.\n    # adminKubeconfig:\n    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).\n",
            "machine_secrets": {
              "certs": {
                "etcd": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQU83b2hiMkZOb0hvTWdGVitKVmVyZ2d3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TXpBMU1qTXhNakE1TWpCYUZ3MHpNekExTWpBeE1qQTVNakJhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFRWmQxbWZaMVZzCkZ4VmpSN0dySmVjSVZGMFlwaFpqdlJtTjhtbWx3bFBJbEVGenFnc0hkQkRONFVrZnRLdUNzNnJjY3AzcDEvejAKR3ZNbUpaVGNkRUhXbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk5ITzlucS81Y3QzCnlLS000NmhNQnEzWEptSklNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJRVRoSXF1bjB5VTdKM3dkRFNNVFJsUFcKTEZFR0pIZkRNQWZSakRHajIyOUhBaUVBNFhabVhlZ0dHVjF5bDBaNmpPM0UzcnJHcThrQldRN0xDZ0VDT25jbgpoK1k9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVmamJVUUpkemZ4K3I0aFozS1dWeDluaUFtemF1RGhBTERqVkhsemU5aG5vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFR1hkWm4yZFZiQmNWWTBleHF5WG5DRlJkR0tZV1k3MFpqZkpwcGNKVHlKUkJjNm9MQjNRUQp6ZUZKSDdTcmdyT3EzSEtkNmRmODlCcnpKaVdVM0hSQjFnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVRDZ0F3SUJBZ0lSQU0yaTRFZjJyU0QwQjFKcktQOTNLdGN3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlNekExTWpNeE1qQTVNakJhRncwek16QTFNakF4TWpBNQpNakJhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVNVMXErMmhPYUovYlpjVHA3V1NBNy8xTFZzSjhNQmdtM3NuL2hOZWhiVXVEVjlLa0FpcEZWZWRjUTcKZUtVeUxGeTNYWWsyc3RJZW5LWlhCQ1pxWCtBb28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGQk5IMGM1T0dpU1I4Q0RFaHlLemFNUWNDU3EyTUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUZoZFl0RVMKS2hNNFpSclkzaytLb2wvMmFJWTJGeCtTbUFCWXl3QVNvNDlGQWlBTW9kVWdOL1NRWnl0VWpROFloS3Z0L2xKcgp5S2VpSEIrM1NUbDdvdXd5K0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUl3ZEZtNEVDMHJQU1o0a1Y5ak02dUlPWFdmQVFOTk9sbDZOUGpBZ2s4eldvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFbE5hdnRvVG1pZjIyWEU2ZTFrZ08vOVMxYkNmREFZSnQ3Si80VFhvVzFMZzFmU3BBSXFSVgpYblhFTzNpbE1peGN0MTJKTnJMU0hweW1Wd1FtYWwvZ0tBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s_aggregator": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFhZ0F3SUJBZ0lSQU5LL1NXZFl0V3JTc1k5Y1pkRUFvWjR3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU16QTFNak14TWpBNU1qQmFGdzB6TXpBMU1qQXhNakE1TWpCYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVIvQ2dWSzhiWCs5d1BvWVJPMkR2Vjg0Rk9SdTMxWGxjTUczaXBrVmRoSEdEckR1NmJXCldJYUhuV1F4UHRmMkNKQXpVa0pzWXgrMXlickxPRC84TU9NUW8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGS1JFK3FFWmh2Q01DR2tOSy9NZjJYR3VzOW5RTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklRQ3JSK2NiUDJueXpPZHVzT2d4KzdkbUJmMHNFZHhsbklMSkdkTFZCOHF1K1FJZ1RTbmJ6eXphd1g2dFZPRmgKMzF3a1ZlaWZBK1E5YVFRcktBVnpjeUY4RUY0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU13bXczeU1LSEFuUjUvMkRKOVlBTlpHdS9UbHYrRDJiTkd2SFJGNXBFaDBvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFZndvRlN2RzEvdmNENkdFVHRnNzFmT0JUa2J0OVY1WERCdDRxWkZYWVJ4ZzZ3N3VtMWxpRwpoNTFrTVQ3WDlnaVFNMUpDYkdNZnRjbTZ5emcvL0REakVBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s_serviceaccount": {
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU5LTU41a1Q3dTdIR1VoL0tyYzNLc0xvUVIxOTllZ2tHWWJ0eElLTkJNVVJvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFM3l4SHhiaUMwaUNCWkV4Q0VKaThEVEFDTTFRSnlkb242bFNTWmI0cVVhVUhpcUQ3d1ZJcQptR0FxM1pzQkpTbHdzRTJBZ1g0MEszZ2d3L3NFRkcxNWxBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "os": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEIydjBJd2s0aitaM2FvQ3ZHZmduU2JNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak14TWpBNU1qQmFGdzB6TXpBMU1qQXhNakE1TWpCYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBUkNmS3JRaVpkOUZSUmp4V0cyVisrRkIwMU9Tc3VqODIwbUVOClZBNHJ3Y3VqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVb1dpM3ZrTWdMa2YwRWk5MwpvWFF4UFdPd2pZQXdCUVlESzJWd0EwRUFYN1kzTDhUQXFJOS9qWmp6WTE2aVZLSExUTUJJRkpqZWVYRXk5eHNWCnpFTWd5ek5xdUxIWW43Tk9LOVFxSU9LcXBXN1BmZUpZam5INStpRnNlSncvQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJSE44RExiUVlOTmJjYi9CNHlDK0dWQ1Npd3h3MzM1SENocmtVMGhoMWtEeAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
                }
              },
              "cluster": {
                "id": "9ps5BLGGz5CNT9mzpXI6qQ_5VpJT6U1EGiJAeqGzk7w=",
                "secret": "lgy1nE/i/VBjnv8an71wxD4vuxOhNCUTXtRCMgwcFck="
              },
              "secrets": {
                "aescbc_encryption_secret": null,
                "bootstrap_token": "fu1a2c.ft9lc85j9w6y3pzb",
                "secretbox_encryption_secret": "24HhHosBntqfPhhGk5y/ZdMtsN225kjugBWE9nXcYYE="
              },
              "trustdinfo": {
                "token": "xfk926.lyt5wku6h8gjlco2"
              }
            },
            "machine_type": "controlplane",
            "talos_version": "v1.4"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "cluster"
              },
              {
                "type": "get_attr",
                "value": "secret"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "secretbox_encryption_secret"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "aescbc_encryption_secret"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "bootstrap_token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "trustdinfo"
              },
              {
                "type": "get_attr",
                "value": "token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "os"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "etcd"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s_aggregator"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s_serviceaccount"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "metallb",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "metallb",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "metallb",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.13.9",
                "chart": "metallb",
                "name": "metallb",
                "namespace": "metallb-system",
                "revision": 1,
                "values": "{\"commonAnnotations\":{},\"commonLabels\":{},\"controller\":{\"affinity\":{},\"args\":[],\"command\":[],\"containerPorts\":{\"metrics\":7472},\"containerSecurityContext\":{\"allowPrivilegeEscalation\":true,\"capabilities\":{\"drop\":[\"ALL\"]},\"enabled\":true,\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"runAsUser\":1001},\"customLivenessProbe\":{},\"customReadinessProbe\":{},\"customStartupProbe\":{},\"extraEnvVars\":[],\"extraEnvVarsCM\":\"\",\"extraEnvVarsSecret\":\"\",\"extraVolumeMounts\":[],\"extraVolumes\":[],\"hostAliases\":[],\"image\":{\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"pullSecrets\":[],\"registry\":\"docker.io\",\"repository\":\"bitnami/metallb-controller\",\"tag\":\"latest\"},\"initContainers\":[],\"lifecycleHooks\":{},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"metrics\":{\"enabled\":false,\"service\":{\"annotations\":{\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"7472\",\"prometheus.io/scrape\":\"true\"},\"port\":7472},\"serviceMonitor\":{\"enabled\":false,\"honorLabels\":false,\"interval\":\"\",\"jobLabel\":\"app.kubernetes.io/name\",\"labels\":{},\"metricRelabelings\":[],\"namespace\":\"\",\"relabelings\":[],\"scrapeTimeout\":\"\",\"selector\":{}}},\"nodeAffinityPreset\":{\"key\":\"\",\"type\":\"\",\"values\":[]},\"nodeSelector\":{},\"podAffinityPreset\":\"\",\"podAnnotations\":{},\"podAntiAffinityPreset\":\"soft\",\"podLabels\":{},\"podSecurityContext\":{\"enabled\":true,\"fsGroup\":1001},\"priorityClassName\":\"\",\"psp\":{\"create\":true},\"rbac\":{\"create\":true},\"readinessProbe\":{\"enabled\":true,\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{},\"requests\":{}},\"revisionHistoryLimit\":3,\"schedulerName\":\"\",\"serviceAccount\":{\"annotations\":{},\"automountServiceAccountToken\":true,\"create\":true,\"name\":\"\"},\"sidecars\":[],\"startupProbe\":{\"enabled\":false,\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"terminationGracePeriodSeconds\":0,\"tolerations\":[],\"topologySpreadConstraints\":[],\"updateStrategy\":{\"type\":\"RollingUpdate\"}},\"diagnosticMode\":{\"args\":[\"infinity\"],\"command\":[\"sleep\"],\"enabled\":false},\"extraDeploy\":[],\"fullnameOverride\":\"\",\"global\":{\"imagePullSecrets\":[],\"imageRegistry\":\"\"},\"installCRDs\":true,\"kubeVersion\":\"\",\"nameOverride\":\"\",\"networkPolicy\":{\"enabled\":false,\"ingressNSMatchLabels\":{},\"ingressNSPodMatchLabels\":{}},\"prometheusRule\":{\"enabled\":false},\"psp\":{\"create\":false},\"rbac\":{\"create\":true},\"speaker\":{\"affinity\":{},\"args\":[],\"command\":[],\"containerPorts\":{\"metrics\":7472},\"containerSecurityContext\":{\"allowPrivilegeEscalation\":true,\"capabilities\":{\"add\":[\"NET_ADMIN\",\"NET_RAW\",\"SYS_ADMIN\"],\"drop\":[\"ALL\"]},\"enabled\":true,\"readOnlyRootFilesystem\":true,\"runAsUser\":0},\"customLivenessProbe\":{},\"customReadinessProbe\":{},\"customStartupProbe\":{},\"enabled\":true,\"extraEnvVars\":[],\"extraEnvVarsCM\":\"\",\"extraEnvVarsSecret\":\"\",\"extraVolumeMounts\":[],\"extraVolumes\":[],\"hostAliases\":[],\"image\":{\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"pullSecrets\":[],\"registry\":\"docker.io\",\"repository\":\"bitnami/metallb-speaker\",\"tag\":\"latest\"},\"initContainers\":[],\"lifecycleHooks\":{},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"metrics\":{\"enabled\":false,\"service\":{\"annotations\":{\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"7472\",\"prometheus.io/scrape\":\"true\"},\"port\":7472},\"serviceMonitor\":{\"enabled\":false,\"honorLabels\":false,\"interval\":\"\",\"jobLabel\":\"app.kubernetes.io/name\",\"labels\":{},\"metricRelabelings\":[],\"namespace\":\"\",\"relabelings\":[],\"scrapeTimeout\":\"\",\"selector\":{}}},\"nodeAffinityPreset\":{\"key\":\"\",\"type\":\"\",\"values\":[]},\"nodeSelector\":{},\"podAffinityPreset\":\"\",\"podAnnotations\":{},\"podAntiAffinityPreset\":\"soft\",\"podLabels\":{},\"podSecurityContext\":{\"enabled\":true,\"fsGroup\":0},\"priorityClassName\":\"\",\"psp\":{\"create\":true},\"rbac\":{\"create\":true},\"readinessProbe\":{\"enabled\":true,\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{},\"requests\":{}},\"secretKey\":\"\",\"secretName\":\"\",\"secretValue\":\"\",\"serviceAccount\":{\"annotations\":{},\"automountServiceAccountToken\":true,\"create\":true,\"name\":\"\"},\"sidecars\":[],\"startupProbe\":{\"enabled\":false,\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"terminationGracePeriodSeconds\":2,\"tolerations\":[],\"updateStrategy\":{\"type\":\"RollingUpdate\"}}}",
                "version": "4.5.1"
              }
            ],
            "name": "metallb",
            "namespace": "metallb-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.bitnami.com/bitnami",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "## @section Global parameters\n## Global Docker image parameters\n## Please, note that this will override the image parameters, including dependencies, configured to use the global value\n## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass\n\n## @param global.imageRegistry Global Docker image registry\n## @param global.imagePullSecrets Global Docker registry secret names as an array\n##\nglobal:\n  imageRegistry: \"\"\n  ## E.g.\n  ## imagePullSecrets:\n  ##   - myRegistryKeySecretName\n  ##\n  imagePullSecrets: []\n\n## @section Common parameters\n\n## @param kubeVersion Force target Kubernetes version (using Helm capabilities if not set)\n##\nkubeVersion: \"\"\n## @param nameOverride String to partially override metallb.fullname include (will maintain the release name)\n##\nnameOverride: \"\"\n## @param fullnameOverride String to fully override metallb.fullname template\n##\nfullnameOverride: \"\"\n## @param commonLabels Add labels to all the deployed resources\n##\ncommonLabels: {}\n## @param commonAnnotations Add annotations to all the deployed resources\n##\ncommonAnnotations: {}\n## @param extraDeploy Array of extra objects to deploy with the release\n##\nextraDeploy: []\n\n## Enable diagnostic mode in the deployment(s)/statefulset(s)\n##\ndiagnosticMode:\n  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)\n  ##\n  enabled: false\n  ## @param diagnosticMode.command Command to override all containers in the the deployment(s)/statefulset(s)\n  ##\n  command:\n    - sleep\n  ## @param diagnosticMode.args Args to override all containers in the the deployment(s)/statefulset(s)\n  ##\n  args:\n    - infinity\n## @param installCRDs Flag to install metallb CRDs\n##\ninstallCRDs: true\n## @section MetalLB parameters\n\n## RBAC creation for controller and speaker\n##\nrbac:\n  ## @param rbac.create Specifies whether to install and use RBAC rules\n  ##\n  create: true\n## PSP creation for controller and speaker\n##\npsp:\n  ## @param psp.create Whether to create a PodSecurityPolicy. WARNING: PodSecurityPolicy is deprecated in Kubernetes v1.21 or later, unavailable in v1.25 or later\n  ##\n  create: false\n## Prometheus Operator alertmanager alerts\n##\nnetworkPolicy:\n  ## @param networkPolicy.enabled Enable NetworkPolicy\n  ## Prometheus scraping of the controller and webhook traffic\n  ##\n  enabled: false\n  ## @param networkPolicy.ingressNSMatchLabels Allow connections from other namespaces\n  ## Set label for namespace and pods (optional).\n  ##\n  ingressNSMatchLabels: {}\n  ## @param networkPolicy.ingressNSPodMatchLabels For other namespaces match by pod labels and namespace labels\n  ##\n  ingressNSPodMatchLabels: {}\n## @param prometheusRule.enabled Prometheus Operator alertmanager alerts are created\n##\nprometheusRule:\n  enabled: false\n\n## @section Controller parameters\n\n## Metallb Controller deployment.\n## ref: https://hub.docker.com/r/bitnami/metallb-controller/tags\n##\ncontroller:\n  ## @param controller.image.registry MetalLB Controller image registry\n  ## @param controller.image.repository MetalLB Controller image repository\n  ## @param controller.image.tag MetalLB Controller  image tag (immutable tags are recommended)\n  ## @param controller.image.digest MetalLB Controller image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag\n  ## @param controller.image.pullPolicy MetalLB Controller image pull policy\n  ## @param controller.image.pullSecrets Specify docker-registry secret names as an array\n  ##\n  image:\n    registry: docker.io\n    repository: bitnami/metallb-controller\n    tag: latest\n    digest: \"\"\n    ## Specify a imagePullPolicy\n    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'\n    ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images\n    ##\n    pullPolicy: IfNotPresent\n    ## Optionally specify an array of imagePullSecrets.\n    ## Secrets must be manually created in the namespace.\n    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n    ## e.g:\n    ## pullSecrets:\n    ##   - myRegistryKeySecretName\n    ##\n    pullSecrets: []\n  ## @param controller.updateStrategy.type Metallb controller deployment strategy type.\n  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy\n  ## e.g:\n  ## updateStrategy:\n  ##  type: RollingUpdate\n  ##  rollingUpdate:\n  ##    maxSurge: 25%\n  ##    maxUnavailable: 25%\n  ##\n  updateStrategy:\n    type: RollingUpdate\n  ## @param controller.hostAliases Deployment pod host aliases\n  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/\n  ##\n  hostAliases: []\n  ## If global .Values.rbac.create is disabled no rbac is created.\n  ## This value is then meaningless\n  ## Defines if the controller rbac should be created.\n  ##\n  rbac:\n    ## @param controller.rbac.create create specifies whether to install and use RBAC rules.\n    ##\n    create: true\n  ## If global .Values.psp.create is disabled no psp is created.\n  ## This value is then meaningless\n  ## Defines if the controller psp should be created.\n  ##\n  psp:\n    ## @param controller.psp.create Whether to create a PodSecurityPolicy. WARNING: PodSecurityPolicy is deprecated in Kubernetes v1.21 or later, unavailable in v1.25 or later\n    ##\n    create: true\n  ## @param controller.priorityClassName Metallb controller pods' priorityClassName\n  ##\n  priorityClassName: \"\"\n  ## @param controller.schedulerName Name of the k8s scheduler (other than default)\n  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/\n  ##\n  schedulerName: \"\"\n  ## @param controller.terminationGracePeriodSeconds In seconds, time the given to the Metallb controller pod needs to terminate gracefully\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods\n  ##\n  terminationGracePeriodSeconds: 0\n  ## @param controller.topologySpreadConstraints Topology Spread Constraints for pod assignment\n  ## https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/\n  ## The value is evaluated as a template\n  ##\n  topologySpreadConstraints: []\n  ## Controller container resource requests and limits\n  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/\n  ## We usually recommend not to specify default resources and to leave this as a conscious\n  ## choice for the user. This also increases chances charts run on environments with little\n  ## resources, such as Minikube. If you do want to specify resources, uncomment the following\n  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  ## @param controller.resources.limits The resources limits for the container\n  ## @param controller.resources.requests The requested resources for the container\n  ##\n  resources:\n    ## Example:\n    ## limits:\n    ##    cpu: 100m\n    ##    memory: 100Mi\n    limits: {}\n    ## Examples:\n    ## requests:\n    ##    cpu: 25m\n    ##    memory: 25Mi\n    requests: {}\n  ## @param controller.nodeSelector Node labels for controller pod assignment\n  ## ref: https://kubernetes.io/docs/user-guide/node-selection/\n  ##\n  nodeSelector: {}\n  ## @param controller.tolerations Tolerations for controller pod assignment\n  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n  ##\n  tolerations: []\n  ## @param controller.affinity Affinity for controller pod assignment\n  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity\n  ##\n  affinity: {}\n  ## @param controller.podAnnotations Controller Pod annotations\n  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\n  ##\n  podAnnotations: {}\n  ## @param controller.podLabels Controller Pod labels\n  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\n  ##\n  podLabels: {}\n  ## @param controller.podAffinityPreset Controller Pod affinitypreset. Allowed values: soft, hard\n  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n  ##\n  podAffinityPreset: \"\"\n  ## @param controller.podAntiAffinityPreset Controller Pod anti affinitypreset. Allowed values: soft, hard\n  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n  ##\n  podAntiAffinityPreset: soft\n  ## Node affinity preset\n  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity\n  ## Allowed values: soft, hard\n  ##\n  nodeAffinityPreset:\n    ## @param controller.nodeAffinityPreset.type Controller Pod Node affinity preset. Allowed values: soft, hard\n    ##\n    type: \"\"\n    ## @param controller.nodeAffinityPreset.key Controller Pod Node affinity label key to match\n    ## E.g.\n    ## key: \"kubernetes.io/e2e-az-name\"\n    ##\n    key: \"\"\n    ## @param controller.nodeAffinityPreset.values Controller Pod Node affinity label values to match\n    ## E.g.\n    ## values:\n    ##   - e2e-az1\n    ##   - e2e-az2\n    ##\n    values: []\n  ## Configure Pods Security Context\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\n  ## @param controller.podSecurityContext.enabled Enabled Metallb Controller pods' Security Context\n  ## @param controller.podSecurityContext.fsGroup Set Metallb Controller pod's Security Context fsGroup\n  ##\n  podSecurityContext:\n    enabled: true\n    fsGroup: 1001\n  ## Configure Container Security Context\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\n  ## @param controller.containerSecurityContext.enabled Enabled Metallb Controller containers' Security Context\n  ## @param controller.containerSecurityContext.runAsUser Set Metallb Controller containers' Security Context runAsUser\n  ## @param controller.containerSecurityContext.runAsNonRoot Set Metallb Controller container's Security Context runAsNonRoot\n  ## @param controller.containerSecurityContext.allowPrivilegeEscalation Enables privilege Escalation context for the pod.\n  ## @param controller.containerSecurityContext.readOnlyRootFilesystem Allows the pod to mount the RootFS as ReadOnly\n  ## @param controller.containerSecurityContext.capabilities.drop [array] Drop capabilities for the securityContext\n  ##\n  containerSecurityContext:\n    enabled: true\n    runAsUser: 1001\n    runAsNonRoot: true\n    allowPrivilegeEscalation: true\n    readOnlyRootFilesystem: true\n    capabilities:\n      drop:\n        - ALL\n  ## @param controller.command Override default container command (useful when using custom images)\n  ##\n  command: []\n  ## @param controller.args Override default container args (useful when using custom images)\n  ##\n  args: []\n  ## @param controller.lifecycleHooks for the Metallb Controller container(s) to automate configuration before or after startup\n  ##\n  lifecycleHooks: {}\n  ## @param controller.extraEnvVars Extra environment variable to pass to the running container.\n  ## For example:\n  ## extraEnvVars:\n  ##  - name: MY_ENV_VAR\n  ##    value: env_var_value\n  ##\n  extraEnvVars: []\n  ## @param controller.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Metallb controller nodes\n  ##\n  extraEnvVarsCM: \"\"\n  ## @param controller.extraEnvVarsSecret Name of existing Secret containing extra env vars for Metallb controller nodes\n  ##\n  extraEnvVarsSecret: \"\"\n  ## @param controller.extraVolumes Optionally specify extra list of additional volumes for the Metallb controller pod(s)\n  ##\n  extraVolumes: []\n  ## @param controller.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Metallb controller container(s)\n  ##\n  extraVolumeMounts: []\n  ## @param controller.sidecars Add additional sidecar containers to the Metallb Controller pod(s)\n  ## e.g:\n  ## sidecars:\n  ##   - name: your-image-name\n  ##     image: your-image\n  ##     imagePullPolicy: Always\n  ##     ports:\n  ##       - name: portname\n  ##         containerPort: 1234\n  ##\n  sidecars: []\n  ## @param controller.initContainers Add additional init containers to the Metallb Controller pod(s)\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/\n  ## e.g:\n  ## initContainers:\n  ##  - name: your-image-name\n  ##    image: your-image\n  ##    imagePullPolicy: Always\n  ##    command: ['sh', '-c', 'echo \"hello world\"']\n  ##\n  initContainers: []\n  ## Pods Service Account\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n  ## @param controller.serviceAccount.create Specifies whether a ServiceAccount should be created\n  ## @param controller.serviceAccount.name Name of the service account to use. If not set and create is true, a name is generated using the fullname template.\n  ## @param controller.serviceAccount.automountServiceAccountToken Automount service account token for the server service account\n  ## @param controller.serviceAccount.annotations Annotations for service account. Evaluated as a template. Only used if `create` is `true`.\n  ##\n  serviceAccount:\n    create: true\n    name: \"\"\n    automountServiceAccountToken: true\n    annotations: {}\n  ## @param controller.revisionHistoryLimit Configure the revisionHistoryLimit of the Controller deployment\n  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#revision-history-limit\n  ##\n  revisionHistoryLimit: 3\n  ## @param controller.containerPorts.metrics Configures the ports the MetalLB Controller listens on for metrics\n  ##\n  containerPorts:\n    metrics: 7472\n  ## Liveness probe values\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes\n  ## @param controller.livenessProbe.enabled Enable livenessProbe\n  ## @param controller.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe\n  ## @param controller.livenessProbe.periodSeconds Period seconds for livenessProbe\n  ## @param controller.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe\n  ## @param controller.livenessProbe.failureThreshold Failure threshold for livenessProbe\n  ## @param controller.livenessProbe.successThreshold Success threshold for livenessProbe\n  ##\n  livenessProbe:\n    enabled: true\n    failureThreshold: 3\n    initialDelaySeconds: 10\n    periodSeconds: 10\n    successThreshold: 1\n    timeoutSeconds: 1\n  ## Readiness probe values\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes\n  ## @param controller.readinessProbe.enabled Enable readinessProbe\n  ## @param controller.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe\n  ## @param controller.readinessProbe.periodSeconds Period seconds for readinessProbe\n  ## @param controller.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe\n  ## @param controller.readinessProbe.failureThreshold Failure threshold for readinessProbe\n  ## @param controller.readinessProbe.successThreshold Success threshold for readinessProbe\n  ##\n  readinessProbe:\n    enabled: true\n    failureThreshold: 3\n    initialDelaySeconds: 10\n    periodSeconds: 10\n    successThreshold: 1\n    timeoutSeconds: 1\n  ## Startup probe values\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes\n  ## @param controller.startupProbe.enabled Enable startupProbe\n  ## @param controller.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe\n  ## @param controller.startupProbe.periodSeconds Period seconds for startupProbe\n  ## @param controller.startupProbe.timeoutSeconds Timeout seconds for startupProbe\n  ## @param controller.startupProbe.failureThreshold Failure threshold for startupProbe\n  ## @param controller.startupProbe.successThreshold Success threshold for startupProbe\n  ##\n  startupProbe:\n    enabled: false\n    failureThreshold: 3\n    initialDelaySeconds: 10\n    periodSeconds: 10\n    successThreshold: 1\n    timeoutSeconds: 1\n  ## @param controller.customStartupProbe Custom liveness probe for the Web component\n  ##\n  customStartupProbe: {}\n  ## @param controller.customLivenessProbe Custom liveness probe for the Web component\n  ##\n  customLivenessProbe: {}\n  ## @param controller.customReadinessProbe Custom readiness probe for the Web component\n  ##\n  customReadinessProbe: {}\n\n  ## @section Metallb controller Prometheus metrics export\n  ##\n  metrics:\n    ## @param controller.metrics.enabled Enable the export of Prometheus metrics\n    ##\n    enabled: false\n    ## Prometheus Exporter service parameters\n    ##\n    service:\n      ## @param controller.metrics.service.port Prometheus metrics service port\n      ##\n      port: 7472\n      ## @param controller.metrics.service.annotations [object] Annotations for the Prometheus Exporter service service\n      ##\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"7472\"\n        prometheus.io/path: \"/metrics\"    ## Prometheus Operator service monitors\n    ##\n    serviceMonitor:\n      ## @param controller.metrics.serviceMonitor.enabled Specify if a servicemonitor will be deployed for prometheus-operator\n      ##\n      enabled: false\n      ## @param controller.metrics.serviceMonitor.namespace Namespace which Prometheus is running in\n      ## e.g:\n      ## namespace: monitoring\n      ##\n      namespace: \"\"\n      ## @param controller.metrics.serviceMonitor.jobLabel Specify the jobLabel to use for the prometheus-operator\n      ##\n      jobLabel: \"app.kubernetes.io/name\"\n      ## @param controller.metrics.serviceMonitor.interval Scrape interval. If not set, the Prometheus default scrape interval is used\n      ##\n      interval: \"\"\n      ## @param controller.metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended\n      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint\n      ##\n      scrapeTimeout: \"\"\n      ## @param controller.metrics.serviceMonitor.metricRelabelings Specify additional relabeling of metrics\n      ##\n      metricRelabelings: []\n      ## @param controller.metrics.serviceMonitor.relabelings Specify general relabeling\n      ##\n      relabelings: []\n      ## @param controller.metrics.serviceMonitor.selector ServiceMonitor selector labels\n      ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration\n      ##\n      ## selector:\n      ##   prometheus: my-prometheus\n      ##\n      selector: {}\n      ## @param controller.metrics.serviceMonitor.labels Extra labels for the ServiceMonitor\n      ##\n      labels: {}\n      ## @param controller.metrics.serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels\n      ##\n      honorLabels: false\n\n## @section Speaker parameters\n\n## Metallb Speaker daemonset.\n## ref: https://hub.docker.com/r/bitnami/metallb-speaker/tags\n##\nspeaker:\n  ## @param speaker.enabled Whether to enable BGP speakers or not\n  ## ref: https://metallb.universe.tf/configuration/calico/#the-easy-way\n  ## Some CNI implementations (e.g. Calico) does not require speakers\n  ##\n  enabled: true\n  ## @param speaker.image.registry MetalLB Speaker image registry\n  ## @param speaker.image.repository MetalLB Speaker image repository\n  ## @param speaker.image.tag MetalLB Speaker  image tag (immutable tags are recommended)\n  ## @param speaker.image.digest MetalLB Speaker image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag\n  ## @param speaker.image.pullPolicy MetalLB Speaker image pull policy\n  ## @param speaker.image.pullSecrets Specify docker-registry secret names as an array\n  ##\n  image:\n    registry: docker.io\n    repository: bitnami/metallb-speaker\n    tag: latest\n    digest: \"\"\n    ## Specify a imagePullPolicy\n    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'\n    ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images\n    ##\n    pullPolicy: IfNotPresent\n    ## Optionally specify an array of imagePullSecrets.\n    ## Secrets must be manually created in the namespace.\n    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n    ## e.g:\n    ## pullSecrets:\n    ##   - myRegistryKeySecretName\n    ##\n    pullSecrets: []\n  ## @param speaker.updateStrategy.type Speaker daemonset strategy type\n  ## ref: https://kubernetes.io/docs/tasks/manage-daemon/update-daemon-set/\n  ##\n  updateStrategy:\n    ## StrategyType\n    ## Can be set to RollingUpdate or OnDelete\n    ##\n    type: RollingUpdate\n  ## If global .Values.rbac.create is disabled no rbac is created.\n  ## This value is then meaningless\n  ## Defines if the speaker rbac should be created.\n  ##\n  rbac:\n    ## @param speaker.rbac.create create specifies whether to install and use RBAC rules.\n    ##\n    create: true\n  ## @param speaker.hostAliases Deployment pod host aliases\n  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/\n  ##\n  hostAliases: []\n  ## If global .Values.psp.create is disabled no psp is created.\n  ## This value is then meaningless\n  ## Defines if the speaker psp should be created.\n  ##\n  psp:\n    ## @param speaker.psp.create Whether to create a PodSecurityPolicy. WARNING: PodSecurityPolicy is deprecated in Kubernetes v1.21 or later, unavailable in v1.25 or later\n    ##\n    create: true\n  ## @param speaker.priorityClassName Speaker pods' priorityClassName\n  ##\n  priorityClassName: \"\"\n  ## @param speaker.terminationGracePeriodSeconds In seconds, time the given to the Speaker pod needs to terminate gracefully\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods\n  ##\n  terminationGracePeriodSeconds: 2\n  ## Speaker container resource requests and limits\n  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/\n  ## We usually recommend not to specify default resources and to leave this as a conscious\n  ## choice for the user. This also increases chances charts run on environments with little\n  ## resources, such as Minikube. If you do want to specify resources, uncomment the following\n  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  ## @param speaker.resources.limits The resources limits for the container\n  ## @param speaker.resources.requests The requested resources for the container\n  ##\n  resources:\n    ## Example:\n    ## limits:\n    ##    cpu: 100m\n    ##    memory: 100Mi\n    limits: {}\n    ## Examples:\n    ## requests:\n    ##    cpu: 25m\n    ##    memory: 25Mi\n    requests: {}\n  ## @param speaker.nodeSelector Node labels for speaker pod assignment\n  ## ref: https://kubernetes.io/docs/user-guide/node-selection/\n  ##\n  nodeSelector: {}\n  ## @param speaker.tolerations Tolerations for speaker pod assignment\n  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n  ##\n  tolerations: []\n  ## @param speaker.affinity Affinity for speaker pod assignment\n  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity\n  ##\n  affinity: {}\n  ## Node speaker.affinity preset\n  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity\n  ##\n  nodeAffinityPreset:\n    ## @param speaker.nodeAffinityPreset.type Node affinity preset type. Ignored if `speaker.affinity` is set. Allowed values: `soft` or `hard`\n    ##\n    type: \"\"\n    ## @param speaker.nodeAffinityPreset.key Node label key to match. Ignored if `speaker.affinity` is set\n    ##\n    key: \"\"\n    ## @param speaker.nodeAffinityPreset.values Node label values to match. Ignored if `speaker.affinity` is set\n    ## E.g.\n    ## values:\n    ##   - e2e-az1\n    ##   - e2e-az2\n    ##\n    values: []\n  ## @param speaker.podAffinityPreset Pod affinity preset. Ignored if `speaker.affinity` is set. Allowed values: `soft` or `hard`\n  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n  ##\n  podAffinityPreset: \"\"\n  ## @param speaker.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `speaker.affinity` is set. Allowed values: `soft` or `hard`\n  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n  ##\n  podAntiAffinityPreset: soft\n  ## @param speaker.podAnnotations Speaker Pod annotations\n  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\n  ##\n  podAnnotations: {}\n  ## @param speaker.podLabels Speaker Pod labels\n  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\n  ##\n  podLabels: {}\n  ## Configure Pods Security Context\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\n  ## @param speaker.podSecurityContext.enabled Enabled Speaker pods' Security Context\n  ## @param speaker.podSecurityContext.fsGroup Set Speaker pod's Security Context fsGroup\n  ##\n  podSecurityContext:\n    enabled: true\n    fsGroup: 0\n  ## Configure Container Security Context\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\n  ## @param speaker.containerSecurityContext.enabled Enabled Speaker containers' Security Context\n  ## @param speaker.containerSecurityContext.runAsUser Set Speaker containers' Security Context runAsUser\n  ## @param speaker.containerSecurityContext.allowPrivilegeEscalation Enables privilege Escalation context for the pod.\n  ## @param speaker.containerSecurityContext.readOnlyRootFilesystem Allows the pod to mount the RootFS as ReadOnly\n  ## @param speaker.containerSecurityContext.capabilities.drop [array] Drop capabilities for the securityContext\n  ## @param speaker.containerSecurityContext.capabilities.add [array] Add capabilities for the securityContext\n  ##\n\n  containerSecurityContext:\n    enabled: true\n    runAsUser: 0\n    allowPrivilegeEscalation: true\n    readOnlyRootFilesystem: true\n    capabilities:\n      drop:\n        - ALL\n      add:\n        - NET_ADMIN\n        - NET_RAW\n        - SYS_ADMIN\n  ## @param speaker.command Override default container command (useful when using custom images)\n  ##\n  command: []\n  ## @param speaker.args Override default container args (useful when using custom images)\n  ##\n  args: []\n  ## @param speaker.lifecycleHooks for the Speaker container(s) to automate configuration before or after startup\n  ##\n  lifecycleHooks: {}\n  ## @param speaker.sidecars Add additional sidecar containers to the Speaker pod(s)\n  ## e.g:\n  ## sidecars:\n  ##   - name: your-image-name\n  ##     image: your-image\n  ##     imagePullPolicy: Always\n  ##     ports:\n  ##       - name: portname\n  ##         containerPort: 1234\n  ##\n  sidecars: []\n  ## @param speaker.initContainers Add additional init containers to the Speaker pod(s)\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/\n  ## e.g:\n  ## initContainers:\n  ##  - name: your-image-name\n  ##    image: your-image\n  ##    imagePullPolicy: Always\n  ##    command: ['sh', '-c', 'echo \"hello world\"']\n  ##\n  initContainers: []\n  ## Pods Service Account\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n  ## @param speaker.serviceAccount.create Specifies whether a ServiceAccount should be created\n  ## @param speaker.serviceAccount.name Name of the service account to use. If not set and create is true, a name is generated using the fullname template.\n  ## @param speaker.serviceAccount.automountServiceAccountToken Automount service account token for the server service account\n  ## @param speaker.serviceAccount.annotations Annotations for service account. Evaluated as a template. Only used if `create` is `true`.\n  ##\n  serviceAccount:\n    create: true\n    name: \"\"\n    automountServiceAccountToken: true\n    annotations: {}\n  ## Defines a secret to use outside of the auto generate\n  ## @param speaker.secretName References a Secret name for the member secret outside of the helm chart\n  ## @param speaker.secretKey References a Secret key the member secret outside of the helm chart\n  ## @param speaker.secretValue Custom value for `speaker.secretKey`\n  ## Default: {{ randAlphaNum 256 | b64enc | quote }}\n  ## The auto generated secret has:\n  ## secretName: {{ \"common.names.fullname\" }}-memberlist\n  ## secretKey: secretkey\n  ## secretValue: random 256 character alphanumeric string\n  ##\n  secretName: \"\"\n  secretKey: \"\"\n  secretValue: \"\"\n  ## @param speaker.extraEnvVars Extra environment variable to pass to the running container.\n  ## For example:\n  ## extraEnvVars:\n  ##  - name: MY_ENV_VAR\n  ##    value: env_var_value\n  ##\n  extraEnvVars: []\n  ## @param speaker.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Speaker nodes\n  ##\n  extraEnvVarsCM: \"\"\n  ## @param speaker.extraEnvVarsSecret Name of existing Secret containing extra env vars for Speaker nodes\n  ##\n  extraEnvVarsSecret: \"\"\n  ## @param speaker.extraVolumes Optionally specify extra list of additional volumes for the Speaker pod(s)\n  ##\n  extraVolumes: []\n  ## @param speaker.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Speaker container(s)\n  ##\n  extraVolumeMounts: []\n  ## @param speaker.containerPorts.metrics HTTP Metrics Endpoint\n  ##\n  containerPorts:\n    metrics: 7472\n  ## Liveness probe values\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes\n  ## @param speaker.livenessProbe.enabled Enable livenessProbe\n  ## @param speaker.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe\n  ## @param speaker.livenessProbe.periodSeconds Period seconds for livenessProbe\n  ## @param speaker.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe\n  ## @param speaker.livenessProbe.failureThreshold Failure threshold for livenessProbe\n  ## @param speaker.livenessProbe.successThreshold Success threshold for livenessProbe\n  ##\n  livenessProbe:\n    enabled: true\n    failureThreshold: 3\n    initialDelaySeconds: 10\n    periodSeconds: 10\n    successThreshold: 1\n    timeoutSeconds: 1\n  ## Readiness probe values\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes\n  ## @param speaker.readinessProbe.enabled Enable readinessProbe\n  ## @param speaker.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe\n  ## @param speaker.readinessProbe.periodSeconds Period seconds for readinessProbe\n  ## @param speaker.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe\n  ## @param speaker.readinessProbe.failureThreshold Failure threshold for readinessProbe\n  ## @param speaker.readinessProbe.successThreshold Success threshold for readinessProbe\n  ##\n  readinessProbe:\n    enabled: true\n    failureThreshold: 3\n    initialDelaySeconds: 10\n    periodSeconds: 10\n    successThreshold: 1\n    timeoutSeconds: 1\n  ## Startup probe values\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes\n  ## @param speaker.startupProbe.enabled Enable startupProbe\n  ## @param speaker.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe\n  ## @param speaker.startupProbe.periodSeconds Period seconds for startupProbe\n  ## @param speaker.startupProbe.timeoutSeconds Timeout seconds for startupProbe\n  ## @param speaker.startupProbe.failureThreshold Failure threshold for startupProbe\n  ## @param speaker.startupProbe.successThreshold Success threshold for startupProbe\n  ##\n  startupProbe:\n    enabled: false\n    failureThreshold: 3\n    initialDelaySeconds: 10\n    periodSeconds: 10\n    successThreshold: 1\n    timeoutSeconds: 1\n  ## @param speaker.customStartupProbe Custom liveness probe for the Web component\n  ##\n  customStartupProbe: {}\n  ## @param speaker.customLivenessProbe Custom liveness probe for the Web component\n  ##\n  customLivenessProbe: {}\n  ## @param speaker.customReadinessProbe Custom readiness probe for the Web component\n  ##\n  customReadinessProbe: {}\n\n  ## @section Speaker Prometheus metrics export\n  metrics:\n    ## @param speaker.metrics.enabled Enable the export of Prometheus metrics\n    ##\n    enabled: false\n    ## Prometheus Exporter service parameters\n    ##\n    service:\n      ## @param speaker.metrics.service.port Prometheus metrics service port\n      ##\n      port: 7472\n      ## @param speaker.metrics.service.annotations [object] Annotations for the Prometheus Exporter service service\n      ##\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"7472\"\n        prometheus.io/path: \"/metrics\"\n    ## Prometheus Operator service monitors\n    ##\n    serviceMonitor:\n      ## @param speaker.metrics.serviceMonitor.enabled Enable support for Prometheus Operator\n      ##\n      enabled: false\n      ## @param speaker.metrics.serviceMonitor.namespace Namespace which Prometheus is running in\n      ## e.g:\n      ## namespace: monitoring\n      ##\n      namespace: \"\"\n      ## @param speaker.metrics.serviceMonitor.jobLabel Job label for scrape target\n      ##\n      jobLabel: \"app.kubernetes.io/name\"\n      ## @param speaker.metrics.serviceMonitor.interval Scrape interval. If not set, the Prometheus default scrape interval is used\n      ##\n      interval: \"\"\n      ## @param speaker.metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended\n      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint\n      ##\n      scrapeTimeout: \"\"\n      ## @param speaker.metrics.serviceMonitor.metricRelabelings Specify additional relabeling of metrics\n      ##\n      metricRelabelings: []\n      ## @param speaker.metrics.serviceMonitor.relabelings Specify general relabeling\n      ##\n      relabelings: []\n      ## @param speaker.metrics.serviceMonitor.selector ServiceMonitor selector labels\n      ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration\n      ##\n      ## selector:\n      ##   prometheus: my-prometheus\n      ##\n      selector: {}\n      ## @param speaker.metrics.serviceMonitor.labels Extra labels for the ServiceMonitor\n      ##\n      labels: {}\n      ## @param speaker.metrics.serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels\n      ##\n      honorLabels: false\n"
            ],
            "verify": false,
            "version": "4.5.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "pihole",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "pihole",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "pihole",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "2023.01",
                "chart": "pihole",
                "name": "pihole",
                "namespace": "pihole",
                "revision": 1,
                "values": "{\"DNS1\":\"84.200.69.80\",\"DNS2\":\"89.233.43.71\",\"adlists\":{},\"adminPassword\":\"admin\",\"affinity\":{},\"antiaff\":{\"avoidRelease\":\"pihole1\",\"enabled\":false,\"strict\":true},\"blacklist\":{},\"customVolumes\":{\"config\":{},\"enabled\":false},\"dnsHostPort\":{\"enabled\":true,\"port\":53},\"dnsmasq\":{\"additionalHostsEntries\":[],\"customCnameEntries\":[],\"customDnsEntries\":[],\"customSettings\":null,\"staticDhcpEntries\":[],\"upstreamServers\":[]},\"doh\":{\"enabled\":false,\"envVars\":{},\"name\":\"cloudflared\",\"probes\":{\"liveness\":{\"enabled\":true,\"failureThreshold\":10,\"initialDelaySeconds\":60,\"probe\":{\"exec\":{\"command\":[\"nslookup\",\"-po=5053\",\"cloudflare.com\",\"127.0.0.1\"]}},\"timeoutSeconds\":5}},\"pullPolicy\":\"IfNotPresent\",\"repository\":\"crazymax/cloudflared\",\"tag\":\"latest\"},\"dualStack\":{\"enabled\":false},\"extraEnvVars\":{},\"extraEnvVarsSecret\":{},\"extraObjects\":[],\"extraVolumeMounts\":{},\"extraVolumes\":{},\"ftl\":{},\"hostNetwork\":\"true\",\"hostname\":\"\",\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"pihole/pihole\",\"tag\":\"latest\"},\"ingress\":{\"annotations\":{},\"enabled\":false,\"hosts\":[\"chart-example.local\"],\"path\":\"/\",\"tls\":[]},\"maxSurge\":2,\"maxUnavailable\":1,\"monitoring\":{\"podMonitor\":{\"enabled\":false},\"sidecar\":{\"enabled\":false,\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"ekofr/pihole-exporter\",\"tag\":\"v0.3.0\"},\"port\":9617,\"resources\":{\"limits\":{\"memory\":\"128Mi\"}}}},\"nodeSelector\":{},\"persistentVolumeClaim\":{\"annotations\":{},\"enabled\":false,\"existingClaim\":\"\"},\"podAnnotations\":{},\"podDnsConfig\":{\"enabled\":true,\"nameservers\":[\"127.0.0.1\",\"8.8.8.8\"],\"policy\":\"None\"},\"privileged\":\"true\",\"probes\":{\"liveness\":{\"enabled\":true,\"failureThreshold\":10,\"initialDelaySeconds\":60,\"port\":\"http\",\"scheme\":\"HTTP\",\"timeoutSeconds\":5},\"readiness\":{\"enabled\":true,\"failureThreshold\":3,\"initialDelaySeconds\":60,\"port\":\"http\",\"scheme\":\"HTTP\",\"timeoutSeconds\":5}},\"regex\":{},\"replicaCount\":1,\"resources\":{},\"serviceDhcp\":{\"annotations\":{},\"enabled\":false,\"externalTrafficPolicy\":\"Local\",\"loadBalancerIP\":\"\",\"loadBalancerIPv6\":\"\",\"nodePort\":\"\",\"port\":67,\"type\":\"NodePort\"},\"serviceDns\":{\"annotations\":{},\"externalTrafficPolicy\":\"Local\",\"loadBalancerIP\":\"192.168.1.131\",\"loadBalancerIPv6\":\"\",\"mixedService\":true,\"nodePort\":\"\",\"port\":53,\"type\":\"LoadBalancer\"},\"serviceWeb\":{\"annotations\":{\"metallb.universe.tf/allow-shared-ip\":\"pihole-svc\"},\"externalTrafficPolicy\":\"Cluster\",\"http\":{\"enabled\":true,\"nodePort\":\"\",\"port\":80},\"https\":{\"enabled\":true,\"nodePort\":\"\",\"port\":443},\"loadBalancerIP\":\"192.168.1.132\",\"loadBalancerIPv6\":\"\",\"type\":\"LoadBalancer\"},\"strategyType\":\"RollingUpdate\",\"tolerations\":[],\"topologySpreadConstraints\":[],\"virtualHost\":\"pihole.cube.local\",\"webHttp\":\"80\",\"webHttps\":\"443\",\"whitelist\":{}}",
                "version": "2.14.0"
              }
            ],
            "name": "pihole",
            "namespace": "pihole",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://mojo2600.github.io/pihole-kubernetes/",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# Default values for pihole.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\n# -- The number of replicas\nreplicaCount: 1\n\n# -- The `spec.strategyTpye` for updates\nstrategyType: RollingUpdate\n\n# -- The maximum number of Pods that can be created over the desired number of `ReplicaSet` during updating.\nmaxSurge: 2\n\n# -- The maximum number of Pods that can be unavailable during updating\nmaxUnavailable: 1\n\nimage:\n  # -- the repostory to pull the image from\n  repository: \"pihole/pihole\"\n  # -- the docker tag, if left empty it will get it from the chart's appVersion\n  tag: \"latest\"\n  # -- the pull policy\n  pullPolicy: IfNotPresent\n\ndualStack:\n  # -- set this to true to enable creation of DualStack services or creation of separate IPv6 services if `serviceDns.type` is set to `\"LoadBalancer\"`\n  enabled: false\n\ndnsHostPort:\n  # -- set this to true to enable dnsHostPort\n  enabled: true\n  # -- default port for this pod\n  port: 53\n\n# -- Configuration for the DNS service on port 53\nserviceDns:\n\n  # -- deploys a mixed (TCP + UDP) Service instead of separate ones\n  mixedService: true\n\n  # -- `spec.type` for the DNS Service\n  #type: NodePort\n\n  # -- The port of the DNS service\n  port: 53\n\n  # -- Optional node port for the DNS service\n  nodePort: \"\"\n\n  # -- `spec.externalTrafficPolicy` for the DHCP Service\n  externalTrafficPolicy: Local\n  \n  # -- A fixed `spec.loadBalancerIP` for the DNS Service\n  loadBalancerIP: 192.168.1.131\n  annotations:\n  # metallb.universe.tf/address-pool: pihole\n    metallb.universe.tf/allow-shared-ip: pihole-svc\n  type: LoadBalancer\n  # -- A fixed `spec.loadBalancerIP` for the IPv6 DNS Service\n  loadBalancerIPv6: \"\"\n\n  # -- Annotations for the DNS service\n  annotations: {}\n    # metallb.universe.tf/address-pool: network-services\n    # metallb.universe.tf/allow-shared-ip: pihole-svc\n\n# -- Configuration for the DHCP service on port 67\nserviceDhcp:\n\n  # -- Generate a Service resource for DHCP traffic\n  enabled: false\n\n  # -- `spec.type` for the DHCP Service\n  type: NodePort\n\n  # -- The port of the DHCP service\n  port: 67\n\n  # -- Optional node port for the DHCP service\n  nodePort: \"\"\n\n  # -- `spec.externalTrafficPolicy` for the DHCP Service\n  externalTrafficPolicy: Local\n\n  # -- A fixed `spec.loadBalancerIP` for the DHCP Service\n  loadBalancerIP: \"\"\n  # -- A fixed `spec.loadBalancerIP` for the IPv6 DHCP Service\n  loadBalancerIPv6: \"\"\n\n  # -- Annotations for the DHCP service\n  annotations: {}\n    # metallb.universe.tf/address-pool: network-services\n    # metallb.universe.tf/allow-shared-ip: pihole-svc\n\n# -- Configuration for the web interface service\nserviceWeb:\n  # -- Configuration for the HTTP web interface listener\n  http:\n\n    # -- Generate a service for HTTP traffic\n    enabled: true\n\n    # -- The port of the web HTTP service\n    port: 80\n\n    # -- Optional node port for the web HTTP service\n    nodePort: \"\"\n\n  # -- Configuration for the HTTPS web interface listener\n  https:\n    # -- Generate a service for HTTPS traffic\n    enabled: true\n\n    # -- The port of the web HTTPS service\n    port: 443\n\n    # -- Optional node port for the web HTTPS service\n    nodePort: \"\"\n\n  # -- `spec.type` for the web interface Service\n  type: LoadBalancer\n\n  # -- `spec.externalTrafficPolicy` for the web interface Service\n  externalTrafficPolicy: Cluster\n\n  # -- A fixed `spec.loadBalancerIP` for the web interface Service\n  loadBalancerIP: 192.168.1.132\n  annotations:\n  # metallb.universe.tf/address-pool: pihole\n    metallb.universe.tf/allow-shared-ip: pihole-svc\n  # -- A fixed `spec.loadBalancerIP` for the IPv6 web interface Service\n  loadBalancerIPv6: \"\"\n\n  # -- Annotations for the DHCP service\n  #annotations: {}\n    # metallb.universe.tf/address-pool: network-services\n    # metallb.universe.tf/allow-shared-ip: pihole-svc\n\nvirtualHost: pihole.cube.local\n\n# -- Configuration for the Ingress\ningress:\n  # -- Generate a Ingress resource\n  enabled: false\n\n  # -- Specify an ingressClassName\n  # ingressClassName: nginx\n\n  # -- Annotations for the ingress\n  annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n  path: /\n  hosts:\n    # virtualHost (default value is pi.hole) will be appended to the hosts\n    - chart-example.local\n  tls: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #     #- virtualHost (default value is pi.hole) will be appended to the hosts\n  #      - chart-example.local\n\n# -- Probes configuration\nprobes:\n  # -- probes.liveness -- Configure the healthcheck for the ingress controller\n  liveness:\n    # -- Generate a liveness probe\n    enabled: true\n    initialDelaySeconds: 60\n    failureThreshold: 10\n    timeoutSeconds: 5\n    port: http\n    scheme: HTTP\n  readiness:\n    # -- Generate a readiness probe\n    enabled: true\n    initialDelaySeconds: 60\n    failureThreshold: 3\n    timeoutSeconds: 5\n    port: http\n    scheme: HTTP\n\n# -- We usually recommend not to specify default resources and to leave this as a conscious\n# -- choice for the user. This also increases chances charts run on environments with little\n# -- resources, such as Minikube. If you do want to specify resources, uncomment the following\n# -- lines, adjust them as necessary, and remove the curly braces after 'resources:'.\nresources: {}\n  # limits:\n  #  cpu: 100m\n  #  memory: 128Mi\n  # requests:\n  #  cpu: 100m\n  #  memory: 128Mi\n\n# -- `spec.PersitentVolumeClaim` configuration\npersistentVolumeClaim:\n  # -- set to true to use pvc\n  enabled: false\n\n  # -- specify an existing `PersistentVolumeClaim` to use\n  existingClaim: \"\"\n\n  # -- Annotations for the `PersitentVolumeClaim`\n  annotations: {}\n\n  #accessModes:\n  #  - ReadWriteOnce\n\n  #size: \"500Mi\"\n\n  ## If defined, storageClassName: \u003cstorageClass\u003e\n  ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n  ## If undefined (the default) or set to null, no storageClassName spec is\n  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on\n  ##   GKE, AWS \u0026 OpenStack)\n  ##\n  # storageClass: \"-\"\n\n  ## If subPath is set mount a sub folder of a volume instead of the root of the volume.\n  ## This is especially handy for volume plugins that don't natively support sub mounting (like glusterfs).\n\n  ## subPath: \"pihole\"\n\nnodeSelector: {}\n\ntolerations: []\n\n# -- Specify a priorityClassName\n# priorityClassName: \"\"\n\n# Reference: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/\ntopologySpreadConstraints: []\n# - maxSkew: \u003cinteger\u003e\n#   topologyKey: \u003cstring\u003e\n#   whenUnsatisfiable: \u003cstring\u003e\n#   labelSelector: \u003cobject\u003e\n\naffinity: {}\n\n# -- Administrator password when not using an existing secret (see below)\nadminPassword: \"admin\"\n\n# -- Use an existing secret for the admin password.\n#admin:\n  # -- Specify an existing secret to use as admin password\n  #existingSecret: \"\"\n  # -- Specify the key inside the secret to use\n  #passwordKey: \"password\"\n\n# -- extraEnvironmentVars is a list of extra enviroment variables to set for pihole to use\nextraEnvVars: {}\n  #TZ: Berlin/Europe\n\n# -- extraEnvVarsSecret is a list of secrets to load in as environment variables.\nextraEnvVarsSecret: {}\n  # env_var:\n  #   name: secret-name\n  #   key: secret-key\n\n# -- default upstream DNS 1 server to use\nDNS1: \"84.200.69.80\"\n# -- default upstream DNS 2 server to use\nDNS2: \"89.233.43.71\"\n\nantiaff:\n  # -- set to true to enable antiaffinity (example: 2 pihole DNS in the same cluster)\n  enabled: false\n  # -- Here you can set the pihole release (you set in `helm install \u003creleasename\u003e ...`)\n  # you want to avoid\n  avoidRelease: pihole1\n  # -- Here you can choose between preferred or required\n  strict: true\n\ndoh:\n  # -- set to true to enabled DNS over HTTPs via cloudflared\n  enabled: false\n  name: \"cloudflared\"\n  repository: \"crazymax/cloudflared\"\n  tag: latest\n  pullPolicy: IfNotPresent\n  # -- Here you can pass environment variables to the DoH container, for example:\n  envVars: {}\n    # TUNNEL_DNS_UPSTREAM: \"https://1.1.1.2/dns-query,https://1.0.0.2/dns-query\"\n\n  # -- Probes configuration\n  probes:\n    # -- Configure the healthcheck for the doh container\n    liveness:\n      # -- set to true to enable liveness probe\n      enabled: true\n      # -- customize the liveness probe\n      probe:\n        exec:\n          command:\n            - nslookup\n            - -po=5053\n            - cloudflare.com\n            - '127.0.0.1'\n      # -- defines the initial delay for the liveness probe\n      initialDelaySeconds: 60\n      # -- defines the failure threshold for the liveness probe\n      failureThreshold: 10\n      # -- defines the timeout in secondes for the liveness probe\n      timeoutSeconds: 5\n\ndnsmasq:\n  # -- Add upstream dns servers. All lines will be added to the pihole dnsmasq configuration\n  upstreamServers: []\n  # - server=/foo.bar/192.168.178.10\n  # - server=/bar.foo/192.168.178.11\n\n  # -- Add custom dns entries to override the dns resolution. All lines will be added to the pihole dnsmasq configuration.\n  customDnsEntries: []\n  # - address=/foo.bar/192.168.178.10\n  # - address=/bar.foo/192.168.178.11\n\n  # -- Dnsmasq reads the /etc/hosts file to resolve ips. You can add additional entries if you like\n  additionalHostsEntries: []\n  # - 192.168.0.3     host4\n  # - 192.168.0.4     host5\n\n  # -- Static DHCP config\n  staticDhcpEntries: []\n  # staticDhcpEntries:\n  # - dhcp-host=MAC_ADDRESS,IP_ADDRESS,HOSTNAME\n\n  # -- Other options\n  customSettings:\n  # otherSettings:\n  # - rebind-domain-ok=/plex.direct/\n\n  # -- Here we specify custom cname entries that should point to `A` records or\n  # elements in customDnsEntries array.\n  # The format should be:\n  #  - cname=cname.foo.bar,foo.bar\n  #  - cname=cname.bar.foo,bar.foo\n  #  - cname=cname record,dns record\n  customCnameEntries: []\n  # Here we specify custom cname entries that should point to `A` records or\n  # elements in customDnsEntries array.\n  # The format should be:\n  #   - cname=cname.foo.bar,foo.bar\n  #   - cname=cname.bar.foo,bar.foo\n  #   - cname=cname record,dns record\n\n# -- list of adlists to import during initial start of the container\nadlists: {}\n  # If you want to provide blocklists, add them here.\n  # - https://hosts-file.net/grm.txt\n  # - https://reddestdream.github.io/Projects/MinimalHosts/etc/MinimalHostsBlocker/minimalhosts\n\n# -- list of whitelisted domains to import during initial start of the container\nwhitelist: {}\n  # If you want to provide whitelisted domains, add them here.\n  # - clients4.google.com\n\n# -- list of blacklisted domains to import during initial start of the container\nblacklist: {}\n  # If you want to have special domains blacklisted, add them here\n  # - *.blackist.com\n\n# -- list of blacklisted regex expressions to import during initial start of the container\nregex: {}\n  # Add regular expression blacklist items\n  # - (^|\\.)facebook\\.com$\n\n# -- values that should be added to pihole-FTL.conf\nftl: {}\n  # Add values for pihole-FTL.conf\n  # MAXDBDAYS: 14\n\n# -- port the container should use to expose HTTP traffic\nwebHttp: \"80\"\n\n# -- port the container should use to expose HTTPS traffic\nwebHttps: \"443\"\n\n# -- hostname of pod\nhostname: \"\"\n\n# -- should the container use host network\nhostNetwork: \"true\"\n\n# -- should container run in privileged mode\nprivileged: \"true\"\n\ncustomVolumes:\n  # -- set this to true to enable custom volumes\n  enabled: false\n  # -- any volume type can be used here\n  config: {}\n    # hostPath:\n    #   path: \"/mnt/data\"\n\n# -- any extra volumes you might want\nextraVolumes: {}\n  # external-conf:\n  #   configMap:\n  #     name: pi-hole-lighttpd-external-conf\n\n# -- any extra volume mounts you might want\nextraVolumeMounts: {}\n  # external-conf:\n  #   mountPath: /etc/lighttpd/external.conf\n  #   subPath: external.conf\n\n# -- any extra kubernetes manifests you might want\nextraObjects: []\n  # - apiVersion: v1\n  #   kind: ConfigMap\n  #   metadata:\n  #     name: pi-hole-lighttpd-external-conf\n  #   data:\n  #     external.conf: |\n  #       $HTTP[\"host\"] =~ \"example.foo\" {\n  #         # If we're using a non-standard host for pihole, ensure the Pi-hole\n  #         # Block Page knows that this is not a blocked domain\n  #         setenv.add-environment = (\"fqdn\" =\u003e \"true\")\n  #\n  #         # Enable the SSL engine with a cert, only for this specific host\n  #         $SERVER[\"socket\"] == \":443\" {\n  #           ssl.engine = \"enable\"\n  #           ssl.pemfile = \"/etc/ssl/lighttpd-private/tls.crt\"\n  #           ssl.privkey = \"/etc/ssl/lighttpd-private/tls.key\"\n  #           ssl.ca-file = \"/etc/ssl/lighttpd-private/ca.crt\"\n  #           ssl.honor-cipher-order = \"enable\"\n  #           ssl.cipher-list = \"EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH\"\n  #           ssl.use-sslv2 = \"disable\"\n  #           ssl.use-sslv3 = \"disable\"\n  #         }\n  #       }\n  #\n  #       # Redirect HTTP to HTTPS\n  #       $HTTP[\"scheme\"] == \"http\" {\n  #         $HTTP[\"host\"] =~ \".*\" {\n  #           url.redirect = (\".*\" =\u003e \"https://%0$0\")\n  #         }\n  #       }\n\n# -- Additional annotations for pods\npodAnnotations: {}\n  # Example below allows Prometheus to scape on metric port (requires pihole-exporter sidecar enabled)\n  # prometheus.io/port: '9617'\n  # prometheus.io/scrape: 'true'\n\nmonitoring:\n  # -- Preferably adding prometheus scrape annotations rather than enabling podMonitor.\n  podMonitor:\n    # -- set this to true to enable podMonitor\n    enabled: false\n  # -- Sidecar configuration\n  sidecar:\n    # -- set this to true to enable podMonitor as sidecar\n    enabled: false\n    port: 9617\n    image:\n      repository: ekofr/pihole-exporter\n      tag: v0.3.0\n      pullPolicy: IfNotPresent\n    resources:\n      limits:\n        memory: 128Mi\n      # requests:\n      #  cpu: 100m\n      #  memory: 128Mi\n\npodDnsConfig:\n  enabled: true\n  policy: \"None\"\n  nameservers:\n  - 127.0.0.1\n  - 8.8.8.8\n\n"
            ],
            "verify": false,
            "version": "2.14.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_manifest.namespace_pihole"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "namespace_metallb_system",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "v1",
                "kind": "Namespace",
                "metadata": {
                  "name": "metallb-system"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "v1",
                "kind": "Namespace",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "kubernetes.io/metadata.name": "metallb-system"
                  },
                  "managedFields": null,
                  "name": "metallb-system",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "finalizers": [
                    "kubernetes"
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "finalizers": [
                        "list",
                        "string"
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "namespace_pihole",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "v1",
                "kind": "Namespace",
                "metadata": {
                  "name": "pihole"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "v1",
                "kind": "Namespace",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "kubernetes.io/metadata.name": "pihole"
                  },
                  "managedFields": null,
                  "name": "pihole",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "finalizers": [
                    "kubernetes"
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "finalizers": [
                        "list",
                        "string"
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "kubeconfig_metallb",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "9154981983077257592",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "kubernetes_manifest.namespace_metallb_system"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "kubeconfig_pihole",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1726638414360252916",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "kubernetes_manifest.namespace_pihole"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "metallb-resources",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "6324361504196620731",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "helm_release.metallb"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "talos_machine_secrets",
      "name": "controller",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "client_configuration": {
              "ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEIydjBJd2s0aitaM2FvQ3ZHZmduU2JNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak14TWpBNU1qQmFGdzB6TXpBMU1qQXhNakE1TWpCYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBUkNmS3JRaVpkOUZSUmp4V0cyVisrRkIwMU9Tc3VqODIwbUVOClZBNHJ3Y3VqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVb1dpM3ZrTWdMa2YwRWk5MwpvWFF4UFdPd2pZQXdCUVlESzJWd0EwRUFYN1kzTDhUQXFJOS9qWmp6WTE2aVZLSExUTUJJRkpqZWVYRXk5eHNWCnpFTWd5ek5xdUxIWW43Tk9LOVFxSU9LcXBXN1BmZUpZam5INStpRnNlSncvQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEE4b2lXcUZQWjBGK3dKSmtZOXlkTFVNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak14TWpBNU1qQmFGdzB6TXpBMU1qQXhNakE1TWpCYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQVZkN1hIOVphV2dOYlh1M0hHQ09UNU5QZmFuUG90cWh4ClhPTVNxWkxuMlNTalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCU2hhTGUrUXlBdVIvUVNMM2VoZERFOVk3Q05nREFGQmdNclpYQURRUUJVWWd5agpEVHJlM2pkWVFtY0EzUC9uUngxTzlqS2E5VlNYSitKWnR3cDJMMlNoZTZXRWo5dmJjb0c2VU14MjJaeUZCNkppCmlsMjBvMERnYTZVMFJXY0YKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
              "client_key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJSXQ3YkFyZUVNbHVRclNtcVowK2V2dXA0U2dlekJqc3RZU29xUW5nTEF6bAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "id": "machine_secrets",
            "machine_secrets": {
              "certs": {
                "etcd": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQU83b2hiMkZOb0hvTWdGVitKVmVyZ2d3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TXpBMU1qTXhNakE1TWpCYUZ3MHpNekExTWpBeE1qQTVNakJhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFRWmQxbWZaMVZzCkZ4VmpSN0dySmVjSVZGMFlwaFpqdlJtTjhtbWx3bFBJbEVGenFnc0hkQkRONFVrZnRLdUNzNnJjY3AzcDEvejAKR3ZNbUpaVGNkRUhXbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk5ITzlucS81Y3QzCnlLS000NmhNQnEzWEptSklNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJRVRoSXF1bjB5VTdKM3dkRFNNVFJsUFcKTEZFR0pIZkRNQWZSakRHajIyOUhBaUVBNFhabVhlZ0dHVjF5bDBaNmpPM0UzcnJHcThrQldRN0xDZ0VDT25jbgpoK1k9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVmamJVUUpkemZ4K3I0aFozS1dWeDluaUFtemF1RGhBTERqVkhsemU5aG5vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFR1hkWm4yZFZiQmNWWTBleHF5WG5DRlJkR0tZV1k3MFpqZkpwcGNKVHlKUkJjNm9MQjNRUQp6ZUZKSDdTcmdyT3EzSEtkNmRmODlCcnpKaVdVM0hSQjFnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVRDZ0F3SUJBZ0lSQU0yaTRFZjJyU0QwQjFKcktQOTNLdGN3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlNekExTWpNeE1qQTVNakJhRncwek16QTFNakF4TWpBNQpNakJhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVNVMXErMmhPYUovYlpjVHA3V1NBNy8xTFZzSjhNQmdtM3NuL2hOZWhiVXVEVjlLa0FpcEZWZWRjUTcKZUtVeUxGeTNYWWsyc3RJZW5LWlhCQ1pxWCtBb28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGQk5IMGM1T0dpU1I4Q0RFaHlLemFNUWNDU3EyTUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUZoZFl0RVMKS2hNNFpSclkzaytLb2wvMmFJWTJGeCtTbUFCWXl3QVNvNDlGQWlBTW9kVWdOL1NRWnl0VWpROFloS3Z0L2xKcgp5S2VpSEIrM1NUbDdvdXd5K0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUl3ZEZtNEVDMHJQU1o0a1Y5ak02dUlPWFdmQVFOTk9sbDZOUGpBZ2s4eldvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFbE5hdnRvVG1pZjIyWEU2ZTFrZ08vOVMxYkNmREFZSnQ3Si80VFhvVzFMZzFmU3BBSXFSVgpYblhFTzNpbE1peGN0MTJKTnJMU0hweW1Wd1FtYWwvZ0tBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s_aggregator": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFhZ0F3SUJBZ0lSQU5LL1NXZFl0V3JTc1k5Y1pkRUFvWjR3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU16QTFNak14TWpBNU1qQmFGdzB6TXpBMU1qQXhNakE1TWpCYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVIvQ2dWSzhiWCs5d1BvWVJPMkR2Vjg0Rk9SdTMxWGxjTUczaXBrVmRoSEdEckR1NmJXCldJYUhuV1F4UHRmMkNKQXpVa0pzWXgrMXlickxPRC84TU9NUW8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGS1JFK3FFWmh2Q01DR2tOSy9NZjJYR3VzOW5RTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklRQ3JSK2NiUDJueXpPZHVzT2d4KzdkbUJmMHNFZHhsbklMSkdkTFZCOHF1K1FJZ1RTbmJ6eXphd1g2dFZPRmgKMzF3a1ZlaWZBK1E5YVFRcktBVnpjeUY4RUY0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU13bXczeU1LSEFuUjUvMkRKOVlBTlpHdS9UbHYrRDJiTkd2SFJGNXBFaDBvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFZndvRlN2RzEvdmNENkdFVHRnNzFmT0JUa2J0OVY1WERCdDRxWkZYWVJ4ZzZ3N3VtMWxpRwpoNTFrTVQ3WDlnaVFNMUpDYkdNZnRjbTZ5emcvL0REakVBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s_serviceaccount": {
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU5LTU41a1Q3dTdIR1VoL0tyYzNLc0xvUVIxOTllZ2tHWWJ0eElLTkJNVVJvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFM3l4SHhiaUMwaUNCWkV4Q0VKaThEVEFDTTFRSnlkb242bFNTWmI0cVVhVUhpcUQ3d1ZJcQptR0FxM1pzQkpTbHdzRTJBZ1g0MEszZ2d3L3NFRkcxNWxBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "os": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEIydjBJd2s0aitaM2FvQ3ZHZmduU2JNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak14TWpBNU1qQmFGdzB6TXpBMU1qQXhNakE1TWpCYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBUkNmS3JRaVpkOUZSUmp4V0cyVisrRkIwMU9Tc3VqODIwbUVOClZBNHJ3Y3VqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVb1dpM3ZrTWdMa2YwRWk5MwpvWFF4UFdPd2pZQXdCUVlESzJWd0EwRUFYN1kzTDhUQXFJOS9qWmp6WTE2aVZLSExUTUJJRkpqZWVYRXk5eHNWCnpFTWd5ek5xdUxIWW43Tk9LOVFxSU9LcXBXN1BmZUpZam5INStpRnNlSncvQ3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJSE44RExiUVlOTmJjYi9CNHlDK0dWQ1Npd3h3MzM1SENocmtVMGhoMWtEeAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
                }
              },
              "cluster": {
                "id": "9ps5BLGGz5CNT9mzpXI6qQ_5VpJT6U1EGiJAeqGzk7w=",
                "secret": "lgy1nE/i/VBjnv8an71wxD4vuxOhNCUTXtRCMgwcFck="
              },
              "secrets": {
                "aescbc_encryption_secret": null,
                "bootstrap_token": "fu1a2c.ft9lc85j9w6y3pzb",
                "secretbox_encryption_secret": "24HhHosBntqfPhhGk5y/ZdMtsN225kjugBWE9nXcYYE="
              },
              "trustdinfo": {
                "token": "xfk926.lyt5wku6h8gjlco2"
              }
            },
            "talos_version": "v1.4"
          },
          "sensitive_attributes": []
        }
      ]
    }
  ],
  "check_results": null
}
